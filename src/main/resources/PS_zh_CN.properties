# １．サーバの種別に関する設定
# 　　アプリケーションサーバおよびデータベースサーバの種類を指定します。
# 　　アプリケーションサーバ：SERVER,   1=Tomcat系/2=WebSphere系
# 　　データベースサーバ　　：Database, 1=Oracle  /2=Microsoft SQL Server
SERVER=1

Database=1
URL=jdbc:oracle:thin:@192.168.30.77:1521:mickey
Driver=oracle.jdbc.driver.OracleDriver
URLForBlob=jdbc:oracle:oci8:@mickey

#Database=2
#URL=jdbc:microsoft:sqlserver://192.168.10.152:1433;selectMethod=cursor
#Driver=com.microsoft.jdbc.sqlserver.SQLServerDriver
#URLForBLOB=jdbc:microsoft:sqlserver://192.168.10.152:1433;selectMethod=cursor


# ２．データベースサーバへの接続に使用するURL
# 　　Oracle : oracle.jarを使用、URL例は URL=jdbc:oracle:thin:@ホスト名:ポート番号:ネットサービス名
# 　　MSSQL  : サードパーティ製ドライバを使用、URLはドライバのマニュアルを参照して設定してください
#URL=jdbc:oracle:thin:@ホスト名:ポート番号:ネットサービス名
# 　　Oracle : 掲示板等添付ファイルをDBに保存するためにこちらも必要


#URL=jdbc:oracle:thin:@192.168.10.148:1521:orcl
#URL=jdbc:microsoft:sqlserver://192.168.10.152:1433;selectMethod=cursor

# ３．データベースサーバとの接続に使用するJDBCドライバ
# 　　Oracle : Driver=oracle.jdbc.driver.OracleDriver
# 　　MSSQL  : Driver=ドライバのマニュアルを参照して設定してください

#Driver=oracle.jdbc.driver.OracleDriver
#Driver=com.microsoft.jdbc.sqlserver.SQLServerDriver

# ４．データベースにログオンするためのユーザー名とパスワード
UserID=psv3
Password=himitsu



# ５．データベースとの間に作成するプールドコネクションの設定
# 　　PoolSize						プールサイズの最大値
# 　　MinimumConnection				プールサイズの最小値
# 　　ConnectionTimeOutInMinutes	コネクションを解放するまでのアイドルタイム(分)
# 　　GetConnectionRetrial			コネクションが取得できないときのリトライ数(回)
# 　　RetryInterval					コネクション取得リトライ時のウェイト(ミリ秒)
# 　　QueryTimeout					SELECT文実行時の最大待ち時間(秒)
PoolSize=5
MinimumConnections=3
ConnectionTimeOutInMinutes=1
GetConnectionRetrial=20
RetryInterval=100
QueryTimeout=300


# ６．SOAPに関する設定(現在は使用していません)
# 　　Tomcat     : SOAPURL=http://localhost:8080/ps/servlet/rpcrouter
# 　　WebSphere  : SOAPURL=http://localhost/servlet/rpcrouter
# SOAPURL=http://localhost:8085/ps/servlet/rpcrouter


# ７．その他のシステムパラメータ
# SWITCH			静的ツリーの作成モード、1=ORGDATE以降現在まで/2=最新のみ
# ORGDATE			静的ツリーの作成対象開始日
# SSO				シングルサインオンモード(TRUE/FALSE)
ORGDATE=2003/04/01
SWITCH=1
#SSO=true
SSO=false

ManagerId=Manager


###################LDAP関連のプロパーティ##################################

# 基本設定
#LDAPを使用するかどうか(trueまたはfalse)
LDAP = false

#LDAPサーバの所在を示すURL（ベースエントリの記述も併せて可能）
#LDAPServerURL=ldap://localhost:389

#nemo
LDAPServerURL=ldap://192.168.10.149:3268

#marlin
#LDAPServerURL=ldap://192.168.10.148:389

#active directory用(使用可能ポート番号: sslモード無し：3268、sslモード時:3269)
#LDAPServerURL=LDAP://192.168.10.149:3268

#LDAPサーバの種類(ActiveDirectoryまたはOpenLDAP)
LDAPServerType=

#LDAPバージョンの設定(3または2)
LDAPVersion=3

#管理者ログイン可否
LDAPManagerLogin = false

#認証ユーザエントリのDN(OpenLDAP用)
LDAPPrincipalOL= cn=Manager,o=scientia,o=co,o=jp

#saslモード使用時の設定
#LDAPPrincipalOL=Manager

#認証ユーザパスワード(OpenLDAP用)
LDAPCredentialsOL=secret

#認証ユーザエントリのDNの固定部分(ActiveDirectory用)
LDAPPrincipalAD=@Scientia.Co.Jp

# 暗号化関連
#SASL方式で接続するかどうか(trueまたはfalse)
#LDAPSASL=false

#SASL方式の接続時の暗号化方式GSSAPI ,CRAM-MD5, DIGEST-MD5, EXTERNAL
#LDAPAuthentication=GSSAPI

#SSL/TLS方式で通信するかどうか(trueまたはfalse)
#LDAPTLS=false

#サーバ証明書の所在　　　　　　　　　　　　　　　　　
#LDAPTLSKeyStore=C:\\temp\\.keystore

# 検索条件
#LDAPエントリ検索のベースDN(openLdap用)
#LDAPSearchBase= o=scientia,o=co,o=jp

#active directory用
LDAPSearchBase=

#LDAPエントリ検索条件(##EmployeeID##はログインアカウントまたは職員番号）
#openldap
LDAPSearchFilter= (Cn=*##EmployeeID##*)

#active directory
#LDAPSearchFilter= (userPrincipalName=*##EmployeeID##*)

#ログインに職員番号とは異なるアカウントを使用するかどうか(trueまたはfalse)
AccountMode=false

#ldap directoryの内部に職員番号のattributeが含まれているかどうかを設定する。(true or false)
LDAPEmployeeIDInServer = false

#ldap directoryの内部に職員番号が存在する時attributeの名称を設定する。(ex:sn)
LDAPEmployeeIDPropertyName =

#アカウントに対して大文字と小文字の区分をするかしないかの設定(true:設定、false:設定しない)
IgnoreCaseOfAccount=true

#ignoreCaseを使う時に大文字にするか小文字にするかの設定(upper:大文字、lower:小文字)
TranslateAccountTo=upper

############################################################################

###################Ps_Sites.jsp関連のプロパティ##############################

# Ps_Sites.jspのJavaScriptFunction loadcontents()にて、
# コンテンツをロードする前に独自処理を行う場合に下記のPs_SitesContentsLoadBeforeProcに記述
# (改行等は入れられません。）
Ps_SitesContentsLoadBeforeProc=

############################################################################
