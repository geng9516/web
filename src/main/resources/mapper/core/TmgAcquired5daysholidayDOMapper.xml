<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.smartcompany.job.modules.core.mapper.TmgAcquired5daysholidayMapper">

    <select id="buildSQLforList"
            resultType="jp.smartcompany.job.modules.tmg.tmgacquired5daysHoliday.vo.Acquired5DaysListVO">
        SELECT
            TA.TA_CEMPLOYEEID,  																		<!-- 社員番号-->
            (
                SELECT
                    E.ME_CKANJINAME
                FROM
                    MAST_EMPLOYEES E
                WHERE
                    E.ME_CCUSTOMERID_CK	= TA.TA_CCUSTOMERID
                AND E.ME_CCOMPANYID		= TA.TA_CCOMPANYID
                AND E.ME_CEMPLOYEEID_CK	= TA.TA_CEMPLOYEEID
                AND E.ME_DSTARTDATE = (
                    SELECT
                        MAX(EE.ME_DSTARTDATE)
                    FROM
                        MAST_EMPLOYEES EE
                    WHERE
                        EE.ME_CCUSTOMERID_CK	= E.ME_CCUSTOMERID_CK
                    AND EE.ME_CCOMPANYID		= E.ME_CCOMPANYID
                    AND EE.ME_CEMPLOYEEID_CK	= E.ME_CEMPLOYEEID_CK
                )
            ) AS CEMPLOYEE_NAME, 																					<!--社員名-->
            (
                SELECT
                    E.TEM_CWORKTYPEID
                FROM
                    TMG_EMPLOYEES E
                WHERE
                    E.TEM_CCUSTOMERID = TA.TA_CCUSTOMERID
                AND E.TEM_CCOMPANYID = TA.TA_CCOMPANYID
                AND E.TEM_CEMPLOYEEID = TA.TA_CEMPLOYEEID
                AND E.TEM_DSTARTDATE <![CDATA[<=]]> #{basedate}
                AND E.TEM_DENDDATE >= #{basedate}
            )  AS WORKERTYPE_ID, 																		<!--所属ID-->
            (
                SELECT
                    TMG_F_GET_MGD(E.TEM_CWORKTYPEID, #{basedate},  TA.TA_CCUSTOMERID, TA.TA_CCOMPANYID, 'ja')
                FROM
                    TMG_EMPLOYEES E
                WHERE
                    E.TEM_CCUSTOMERID = TA.TA_CCUSTOMERID
                AND E.TEM_CCOMPANYID = TA.TA_CCOMPANYID
                AND E.TEM_CEMPLOYEEID = TA.TA_CEMPLOYEEID
                AND E.TEM_DSTARTDATE <![CDATA[<=]]> #{basedate}
                AND E.TEM_DENDDATE >= #{basedate}
            ) AS WORKERTYPE_NM, 																		<!--所属名-->
            TO_CHAR(TA.TA_DPAID_HOLIDAY, 'YYYY/MM/DD') AS TA_DYYYYMMDD,  								<!--付与日-->
            NVL(TA.TA_NHOLIDAY_DAYS, 0) AS TA_FUYODAYS,   												<!--付与日数-->
            TO_CHAR(TA.TA_DBASEDATE_START, 'YYYY/MM/DD') AS TA_KIJYUNBI,  								<!--基準日-->
            <!--TO_CHAR(TA.TA_DBASEDATE_END, 'YYYY/MM/DD') AS TA_KIKANBI,                                   チェック期間-->
            NVL(to_char(tpf.TPF_DPAID_HOLIDAY_END, 'yyyy/MM/dd'),to_char(ta.TA_DBASEDATE_END, 'yyyy/MM/dd')) as TA_KIKANBI,  <!--チェック期間-->
            <!--NVL(TP.TP_NNECESSARY_DAYS, 0) + NVL(TPF.TPF_NUSEDAYS_AJDUST, 0)  AS SUM_SYUTOKUDAYS,                             一覧画面表示取得日数 = DB取得日数 + 調整取得日数-->
            COALESCE(tpf.TPF_NUSEDAYS_FIX,tp.TP_NNECESSARY_DAYS, 0) + NVL(tpf.TPF_NUSEDAYS_AJDUST, 0)  as SUM_SYUTOKUDAYS,   <!--一覧画面表示取得日数 = DB取得日数 + 調整取得日数-->
            <!--NVL(TA.TA_NNECESSARY_DAYS, 0)  AS TA_MUSTDAYS,                                                                   必要日数-->
            COALESCE(tpf.TPF_NUSEDAYS_DAYS,tpf.TPF_NMUSTDAYS_FIX,ta.TA_NNECESSARY_DAYS, 0)  as TA_MUSTDAYS,                  <!--必要日数-->
            CASE WHEN NVL(TA.TA_NNECESSARY_DAYS, 0) - NVL(TP.TP_NNECESSARY_DAYS, 0) - NVL(TPF.TPF_NUSEDAYS_AJDUST, 0) <![CDATA[<=]]> 0 THEN 0
                ELSE NVL(TA.TA_NNECESSARY_DAYS, 0) - NVL(TP.TP_NNECESSARY_DAYS, 0) - NVL(TPF.TPF_NUSEDAYS_AJDUST, 0)
            END AS TA_LESSDAYS,   																		<!-- 不足日数 = 必要日数 - DB取得日数 - 調整取得日数-->
            (
                SELECT
                    COUNT(TA_CEMPLOYEEID)
                FROM
                    TMG_ACQUIRED5DAYSHOLIDAY TTA
                WHERE
                    TTA.TA_CEMPLOYEEID = TA.TA_CEMPLOYEEID
                AND COALESCE(TTA.TA_DBASEDATE_START,TO_DATE(('1900-01-01'),'YYYY/MM/DD')) = COALESCE(TA.TA_DBASEDATE_START,TO_DATE(('1900-01-01'),'YYYY/MM/DD'))
                AND TO_CHAR(NVL(tta.TA_DBASEDATE_START, tta.TA_DPAID_HOLIDAY), 'YYYY') = TO_CHAR(TO_DATE(#{basedate}) , 'YYYY')
            ) AS  TA_ROWPAN, 																			<!-- ROWPAN-->
            TA_CDUPLICATEFLG,   																		<!--重複FLG-->
            TO_CHAR(TP.TP_DNTF_SURVEY_START, 'YYYY/MM/DD')  AS TP_DNTF_SURVEY_START,   					<!--年休調査期間（開始日）-->
            TO_CHAR(TP.TP_DNTF_SURVEY_END, 'YYYY/MM/DD')  AS TP_DNTF_SURVEY_END,  						<!--年休調査期間（終了日）-->
            TO_CHAR(TPF.TPF_DPAID_HOLIDAY_FIX, 'YYYY/MM/DD') AS TPF_KIJYUNBI,  							<!--修正基準日-->
            TO_CHAR(TPF.TPF_DKIKANBI_FIX, 'YYYY/MM/DD') AS TPF_KIKANBI,  								<!--修正チェック期間-->
            NVL(TPF.TPF_NUSEDAYS_FIX, 0)  AS TPF_SYUTOKUDAYS,   										<!--修正取得日数-->
            NVL(TPF.TPF_NUSEDAYS_AJDUST, 0) AS TPF_SYUTOKUDAYS_ADJUST,   								<!--調整取得日数-->
            <!--NVL(TPF.TPF_NMUSTDAYS_FIX, 0)  AS TPF_MUSTDAYS,   										    修正必要日数-->
            COALESCE(tpf.TPF_NUSEDAYS_DAYS,tpf.TPF_NMUSTDAYS_FIX, 0)  as TPF_MUSTDAYS,                  <!--修正必要日数-->
            <!--CASE WHEN NVL(TPF.TPF_NMUSTDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_AJDUST, 0) <![CDATA[<=]]> 0 THEN 0
            ELSE NVL(TPF.TPF_NMUSTDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_AJDUST, 0)
            END AS TPF_LESSDAYS,   																		    修正不足日数 = 修正必要日数 - 修正取得日数 - 調整取得日数-->
            CASE WHEN coalesce(tpf.TPF_NUSEDAYS_DAYS, tpf.TPF_NMUSTDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_AJDUST, 0) <![CDATA[<=]]> 0 THEN 0
            ELSE coalesce(tpf.TPF_NUSEDAYS_DAYS, tpf.TPF_NMUSTDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_FIX, 0) - NVL(TPF.TPF_NUSEDAYS_AJDUST, 0)
            END AS TPF_LESSDAYS,   																		<!--修正不足日数 = 修正必要日数 - 修正取得日数 - 調整取得日数-->
            NVL(TP.TP_NNECESSARY_DAYS, 0) AS TP_SYUTOKUDAYS,  											<!--編集画面表示取得日数-->
            TO_CHAR(tpf.TPF_DPAID_HOLIDAY_END, 'yyyy/MM/dd') AS TPF_HOLIDAYENDFIX,  		            <!--修正終期-->
            TO_CHAR(tpf.TPF_NUSEDAYS_DAYS) AS TPF_NUSEDAYSFIX  						                    <!--修正必要日数-->
        FROM
            TMG_ACQUIRED5DAYSHOLIDAY TA
        INNER JOIN (${empsql}) A
        ON A.EMPID = TA.TA_CEMPLOYEEID
        AND A.CUST = TA.TA_CCUSTOMERID
        AND A.COMP = TA.TA_CCOMPANYID
        LEFT JOIN TMG_PAIDUSEINFO TP
        ON  TA.TA_CCUSTOMERID = TP.TP_CCUSTOMERID
        AND TA.TA_CCOMPANYID = TP.TP_CCOMPANYID
        AND TA.TA_CEMPLOYEEID = TP.TP_CEMPLOYEEID
        AND TRUNC(TA.TA_DBASEDATE_START) = TRUNC(TP.TP_DBASEDATE_START)
        LEFT JOIN TMG_PAIDUSEINFO_FIX TPF
        ON TA.TA_CCOMPANYID = TPF.TPF_CCOMPANYID
        AND TA.TA_CCUSTOMERID = TPF.TPF_CCUSTOMERID
        AND TA.TA_CEMPLOYEEID = TPF.TPF_CEMPLOYEEID
        AND TO_CHAR(NVL(TA_DBASEDATE_START, TA_DPAID_HOLIDAY), 'YYYY') = TO_CHAR(TPF.TPF_NYYYY)
        WHERE
            TO_CHAR(NVL(TA_DBASEDATE_START, TA_DPAID_HOLIDAY), 'YYYY') = TO_CHAR(TO_DATE(#{basedate}) , 'YYYY')
        <if test="userCode != NULL">
            AND TA.TA_CEMPLOYEEID = #{userCode}
        </if>
        ORDER BY TA.TA_CEMPLOYEEID,  TA.TA_DPAID_HOLIDAY
    </select>
    <select id="buildSQLTmgAcquired5daykikanbi" statementType="CALLABLE">
        CALL TMG_P_SET_ACQUIRED5DAYKIKANBI(
            #{txtUserCode},
            #{kijunbi, jdbcType=VARCHAR},
            #{txtYear, jdbcType=VARCHAR},
            #{kijunbiEdit,jdbcType=VARCHAR},
            #{userCode},
            #{programId},
            #{custID},
            #{compCode},
            #{txtDpaidholidayEnd, jdbcType=VARCHAR},
            #{txtNusedaysDays, jdbcType=VARCHAR},
            #{txtFuyobi, jdbcType=VARCHAR}
        )
    </select>
</mapper>