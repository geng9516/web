<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.smartcompany.job.modules.core.mapper.MastOrganisationMapper">

    <select parameterType="map" id="selectLowerSection" resultType="string">
        -- 下位組織情報取得（組織指定）
        SELECT	ORG_TERGET.MO_CSECTIONID_CK AS moCsectionidCk
        FROM	MAST_ORGANISATION ORG_TERGET,
        MAST_ORGANISATION ORG_ROOT
        WHERE
        -- 対象となる組織取得
        ORG_TERGET.MO_CCUSTOMERID_CK_FK = #{custId}
        AND		ORG_TERGET.MO_CCOMPANYID_CK_FK = #{compId}
        AND		ORG_TERGET.MO_CSECTIONID_CK != #{sectionId}
        AND		ORG_TERGET.MO_CLANGUAGE = 'ja'
        AND		ORG_TERGET.MO_DSTART <![CDATA[ <= ]]> #{date}
        AND		ORG_TERGET.MO_DEND >= #{date}
        -- 基点となる組織取得
        AND		ORG_ROOT.MO_CCUSTOMERID_CK_FK = #{custId}
        AND		ORG_ROOT.MO_CCOMPANYID_CK_FK = #{compId}
        AND		ORG_ROOT.MO_CSECTIONID_CK = #{sectionId}
        AND		ORG_ROOT.MO_CLANGUAGE = 'ja'
        AND		ORG_ROOT.MO_DSTART <![CDATA[ <= ]]> #{date}
        AND		ORG_ROOT.MO_DEND >= #{date}
        AND		ORG_TERGET.MO_CLAYEREDSECTIONID LIKE ORG_ROOT.MO_CLAYEREDSECTIONID ||'%'
        ORDER BY
        ORG_TERGET.MO_CSECTIONID_CK;
    </select>

    <select id="buildSQLForLimitOfBasedate" resultType="jp.smartcompany.job.modules.tmg.tmgresults.vo.LimitOfBasedateVO">
        SELECT
            OT_DAILY_01 AS OT_DAILY,
            OT_DAILY_01 * 60 AS DAILY_CONV_MINUTE
        FROM
            TABLE(
                    TMG_F_GET_OVERTIMELIMT(
                        #{custID},
                        #{compCode},
                        #{targetSec},
                        NULL,
                        #{day}
                    )
                )
    </select>
    <select id="buildSQLForSelectEmployeeDetail" resultType="java.lang.String">
        SELECT
            TMG_F_GET_MO(
                #{sectionId},
                #{today},
                0,
                #{custId},
                #{compCode}
            )
		FROM
		    DUAL
    </select>

    <select id="selectLowEmp" parameterType="map" resultType="jp.smartcompany.job.modules.core.pojo.entity.MastOrganisationDO">
        -- 下位組織情報取得（社員指定）
        SELECT
        MO_CSECTIONID_CK
        FROM
        MAST_ORGANISATION
        WHERE
        MO_CCUSTOMERID_CK_FK = #{custId}
        AND MO_CSECTIONID_CK <![CDATA[<>]]> #{sectionId}
        AND MO_CLANGUAGE = 'ja'
        AND MO_DSTART <![CDATA[ <= ]]> to_date(#{searchDate},'yyyy/mm/dd')
        AND MO_DEND >= to_date(#{searchDate},'yyyy/mm/dd')
        -- 仮想組織判定がtrueだったら、下記条件をANDする
        <if test="virtualSection">
            AND MO_NHR <![CDATA[<>]]> '3'
        </if>
        AND MO_CLAYEREDSECTIONID LIKE (
            SELECT
            MO_CLAYEREDSECTIONID ||'%'
            FROM
            MAST_ORGANISATION
            WHERE
            MO_CCUSTOMERID_CK_FK = #{custId}
            AND MO_CCOMPANYID_CK_FK = #{compId}
            AND	MO_CSECTIONID_CK = #{sectionId}
            AND	MO_CLANGUAGE = 'ja'
            AND MO_DSTART <![CDATA[ <= ]]> to_date(#{searchDate},'yyyy/mm/dd')
            AND MO_DEND >= to_date(#{searchDate},'yyyy/mm/dd')
        )
        ORDER BY MO_CSECTIONID_CK
    </select>


    <select id="selectHasAuth" resultType="java.lang.Integer">
        SELECT
            COUNT(1)
        FROM
            MAST_ORGANISATION o
        WHERE
            o.MO_CCUSTOMERID_CK_FK =#{customerId}
        AND o.MO_CCOMPANYID_CK_FK  = #{compnyId}
        AND o.MO_CSECTIONID_CK  = #{sectionId}
        AND o.MO_DSTART  <![CDATA[ <= ]]> #{searchDate}
        AND o.MO_DEND  >= #{searchDate}
        AND o.MO_CLANGUAGE  = #{language}
        ${exists}
        ;
    </select>
    <select id="selectTargetFiscalYear" resultType="jp.smartcompany.job.modules.tmg.monthlyoutput.dto.TargetFiscalYearDto">
        SELECT
            TO_CHAR(
            TMG_F_GET_THE_YEARZONE (
            TMG_F_GET_THE_YEAR ( TRUNC( TO_DATE(#{targetDate}, 'YYYY/MM/DD' ) ), #{cust}, #{comp} ),
            0,
            TRUNC( TO_DATE(#{targetDate}, 'YYYY/MM/DD' ) ),
            #{cust},
            #{comp}
            ),
            'YYYY/MM/DD'
            ) AS TARGET_YEAR_DATE,
            (
            SELECT
                DECODE(
                P.PRE_YEAR_DATE,
                NULL,
                NULL,
                TO_CHAR( TMG_F_GET_THE_YEARZONE ( TMG_F_GET_THE_YEAR ( P.PRE_YEAR_DATE, #{cust}, #{comp} ), 0, P.PRE_YEAR_DATE, #{cust}, #{comp} ), 'YYYY/MM/DD' )
                )
            FROM
            (
                SELECT
                LEAST( MAX( O.MO_DEND ), TRUNC( TO_DATE( #{targetStartDate}, 'YYYY/MM/DD' ) ) - 1 ) AS PRE_YEAR_DATE
                FROM
                MAST_ORGANISATION O
                WHERE
                O.MO_CSECTIONID_CK = #{section}
                AND O.MO_CCUSTOMERID_CK_FK = #{cust}
                AND O.MO_CCOMPANYID_CK_FK = #{comp}
                AND O.MO_CLANGUAGE = #{lang}
                AND O.MO_DSTART <![CDATA[ < ]]> TRUNC( TO_DATE( #{targetStartDate}, 'YYYY/MM/DD' ) )
            ) P
            ) AS PRE_YEAR_DATE,
            (
                SELECT
                DECODE(
                N.NEXT_YEAR_DATE,
                NULL,
                NULL,
                TO_CHAR( TMG_F_GET_THE_YEARZONE ( TMG_F_GET_THE_YEAR ( N.NEXT_YEAR_DATE, #{cust}, #{comp}), 0, N.NEXT_YEAR_DATE, #{cust}, #{comp} ), 'YYYY/MM/DD' )
                )
            FROM
            (
                SELECT
                    GREATEST( MAX( O.MO_DSTART ), TRUNC( TO_DATE(#{targetEneDate}, 'YYYY/MM/DD' ) ) + 1 ) AS NEXT_YEAR_DATE
                FROM
                    MAST_ORGANISATION O
                WHERE
                    O.MO_CSECTIONID_CK = #{section}
                AND O.MO_CCUSTOMERID_CK_FK = #{cust}
                AND O.MO_CCOMPANYID_CK_FK = #{comp}
                AND O.MO_CLANGUAGE = #{lang}
                AND O.MO_DEND > TRUNC( TO_DATE( #{targetEneDate}, 'YYYY/MM/DD' ) )
                AND TRUNC( TO_DATE( #{psBaseDate}, 'YYYY/MM/DD' ) ) > TRUNC( TO_DATE( #{targetEneDate}, 'YYYY/MM/DD' ) )
            ) N
        ) AS NEXT_YEAR_DATE,
        TO_CHAR(
            TMG_F_GET_THE_YEARZONE (
                TMG_F_GET_THE_YEAR ( TRUNC( TO_DATE( #{psBaseDate}, 'YYYY/MM/DD' ) ), #{cust}, #{comp} ),
                0,
                TRUNC( TO_DATE( #{psBaseDate}, 'YYYY/MM/DD' ) ),
                #{cust},
                #{comp}
                ),
                'YYYY/MM/DD'
        ) AS CURR_YEAR_DATE
        FROM
            DUAL
        ;
    </select>
    <select id="selectNotApproval" resultType="jp.smartcompany.job.modules.tmg.monthlyoutput.vo.NotApprovalVo">
        SELECT
            M.SECTION_NICK,
            M.EMP_NAME,
            M.NOT_APPROVAL_COUNT,
            M.TMO_CEMPLOYEEID
        FROM
            (
            SELECT
                TMG_F_GET_MO ( M.HD_CSECTIONID_FK, LAST_DAY( M.TMO_DYYYYMM ), 1, M.TMO_CCUSTOMERID, M.TMO_CCOMPANYID, #{lang} ) AS SECTION_NICK,
                M.TMO_CEMPLOYEEID,
                TMG_F_GET_ME_NAME ( M.TMO_CEMPLOYEEID, M.HD_DSTARTDATE_CK, 0, M.TMO_CCUSTOMERID, M.TMO_CCOMPANYID ) AS EMP_NAME,
                ROWNUM AS NUM,
                MAX( ROWNUM ) KEEP ( DENSE_RANK LAST ORDER BY ROWNUM ) OVER ( ) AS NOT_APPROVAL_COUNT
            FROM
                (
                SELECT
                    *
                FROM
                    ( SELECT * FROM TABLE ( TMG_SELECT_MONTHLYOUTPUTLIST ( #{custId}, #{compId}, #{secId}, TRUNC( TO_DATE( #{dyyyymm}, 'YYYY/MM/DD' ) ), #{lang} ) ) ) M
                WHERE
                    M.TMO_CSTATUSFLG = 'TMG_DATASTATUS|0'
                ORDER BY
                    M.HD_CSECTIONID_FK,
                    M.TMO_CEMPLOYEEID
                ) M
            ) M
        WHERE
            M.NUM BETWEEN #{numStart,jdbcType=BIGINT}
            AND #{numEnd,jdbcType=BIGINT}
        ;
    </select>

    <select id="selectNotFixedDeptList" resultType="jp.smartcompany.job.modules.tmg.monthlyoutput.vo.NotFixedDeptListVo">
        SELECT
            M.SECTION_NICK,
            M.NOT_MONTHLYFIX_COUNT
        FROM
            (
            SELECT
                TMG_F_GET_MO ( M.BASESECTION, LAST_DAY( M.TMO_DYYYYMM ), 1, M.TMO_CCUSTOMERID, M.TMO_CCOMPANYID, #{lang} ) AS SECTION_NICK,
                ROWNUM AS NUM,
                MAX( ROWNUM ) KEEP ( DENSE_RANK LAST ORDER BY ROWNUM ) OVER ( ) AS NOT_MONTHLYFIX_COUNT
            FROM
                (
                SELECT
                    M.TMO_CCUSTOMERID,
                    M.TMO_CCOMPANYID,
                    M.TMO_DYYYYMM,
                    M.BASESECTION
                FROM
                    (
                    SELECT
                        M.* ,
                        TMG_F_IS_FIXED_MONTHLY ( M.TMO_CEMPLOYEEID, M.TMO_DYYYYMM, M.TMO_CCUSTOMERID, M.TMO_CCOMPANYID ) AS NOT_MONTHLY_FIX
                    FROM
                        ( SELECT * FROM TABLE ( TMG_SELECT_MONTHLYOUTPUTLIST ( #{custId}, #{compId}, #{secId}, TRUNC( TO_DATE( #{dyyyymm}, 'YYYY/MM/DD' ) ), #{lang} ) ) ) M
                    ) M
                WHERE
                    M.NOT_MONTHLY_FIX = 0
                GROUP BY
                    M.TMO_CCUSTOMERID,
                    M.TMO_CCOMPANYID,
                    M.TMO_DYYYYMM,
                    M.BASESECTION
                ORDER BY
                    M.BASESECTION
                ) M
            ) M
        WHERE
            M.NUM BETWEEN #{numStart,jdbcType=BIGINT}
            AND  #{numEnd,jdbcType=BIGINT}
    </select>

    <select id="selectOrgList" parameterType="map" resultType="jp.smartcompany.framework.jsf.orgtree.dto.OrgTreeDTO">
        SELECT /*+ INDEX(MO PS_MAST_ORGANISATION_IDX3) */
            MO.MO_CCUSTOMERID_CK_FK,
            MO.MO_CCOMPANYID_CK_FK,
            NVL(
                CASE '${language}'
                    WHEN 'en' THEN b.MAC_CCOMPANYNAMEEN
                    WHEN 'ch' THEN b.MAC_CCOMPANYNAMECH
                    WHEN '01' THEN b.MAC_CCOMPANYNAME01
                    WHEN '02' THEN b.MAC_CCOMPANYNAME02
                    ELSE b.MAC_CCOMPANYNAMEJA
                END,
                ' '
            ) as MAC_CCOMPANYNAME,
            MO.MO_CSECTIONID_CK,
            MO.MO_CLAYEREDSECTIONID,
            NVL(
                CASE '${language}'
                    WHEN 'en' THEN MO.MO_CSECTIONNAMEEN
                    WHEN 'ch' THEN MO.MO_CSECTIONNAMECH
                    WHEN '01' THEN MO.MO_CSECTIONNAME01
                    WHEN '02' THEN MO.MO_CSECTIONNAME02
                    ELSE MO.MO_CSECTIONNAMEJA
                END,
                ' '
            ) as MO_CSECTIONNAME,
            NVL(
                CASE '${language}'
                    WHEN 'en' THEN MO.MO_CSECTIONNICKEN
                    WHEN 'ch' THEN MO.MO_CSECTIONNICKCH
                    WHEN '01' THEN MO.MO_CSECTIONNICK01
                    WHEN '02' THEN MO.MO_CSECTIONNICK02
                    ELSE MO.MO_CSECTIONNICKJA
                END,
                ' '
            ) as MO_CSECTIONNICK,
            NVL(MO.MO_CPARENTID, 'Root') as MO_CPARENTID,
            MO.MO_NLEVEL,
            MO.MO_NSEQ,
            MO.MO_NHR
        FROM
             MAST_ORGANISATION MO
             LEFT OUTER JOIN MAST_COMPANY b ON
                 b.MAC_CCUSTOMERID_CK_FK = #{customerId}
                 AND b.MAC_CCOMPANYID_CK = #{companyId}
                 AND b.MAC_DSTART <![CDATA[ <= ]]> #{startDate}
                 AND b.MAC_DEND >= #{endDate}
                 AND b.MAC_CLANGUAGE = 'ja'
        WHERE
             MO.MO_DSTART <![CDATA[ <= ]]> #{startDate}
             AND MO.MO_DEND >= #{endDate}
             AND MO.MO_CCUSTOMERID_CK_FK = #{customerId}
             AND MO.MO_CCOMPANYID_CK_FK	= #{companyId}
             AND MO.MO_CLANGUAGE = 'ja'
            <choose>
                <when test='(companyCode ==null or companyCode == "") and (sectionCode=="" or sectionCode== null)'>
                    ${sExists}
                </when>
                <otherwise>
                    AND MO.MO_CCOMPANYID_CK_FK = #{companyCode}
                    AND MO.MO_CLAYEREDSECTIONID LIKE (
                         SELECT
                             MO2.MO_CLAYEREDSECTIONID || '%'
                         FROM MAST_ORGANISATION MO2
                         WHERE
                             MO2.MO_CCOMPANYID_CK_FK = #{companyCode}
                             AND MO2.MO_CSECTIONID_CK = #{sectionCode}
                             AND MO2.MO_DSTART <![CDATA[<=]]> #{searchDate}
                             AND MO2.MO_DEND >= #{searchDate}
                    )
                </otherwise>
            </choose>
             ORDER BY MO.MO_NSEQ,MO.MO_CCOMPANYID_CK_FK,MO.MO_CSECTIONID_CK
    </select>

    <select id="selectSelCompOrgTreeList" parameterType="map" resultType="jp.smartcompany.framework.jsf.orgtree.dto.OrgTreeDTO">
        SELECT /*+ INDEX(MO PS_MAST_ORGANISATION_IDX3) */
            MO.MO_CCUSTOMERID_CK_FK,
            MO.MO_CCOMPANYID_CK_FK,
            MO.MO_CSECTIONID_CK,
            MO.MO_CLAYEREDSECTIONID,
            NVL(
                CASE '${language}'
                    WHEN 'en' THEN MO.MO_CSECTIONNAMEEN
                    WHEN 'ch' THEN MO.MO_CSECTIONNAMECH
                    WHEN '01' THEN MO.MO_CSECTIONNAME01
                    WHEN '02' THEN MO.MO_CSECTIONNAME02
                    ELSE MO.MO_CSECTIONNAMEJA
                    END,
                    ' '
            ) as MO_CSECTIONNAME,
            NVL(
                CASE '${language}'
                    WHEN 'en' THEN MO.MO_CSECTIONNICKEN
                    WHEN 'ch' THEN MO.MO_CSECTIONNICKCH
                    WHEN '01' THEN MO.MO_CSECTIONNICK01
                    WHEN '02' THEN MO.MO_CSECTIONNICK02
                    ELSE MO.MO_CSECTIONNICKJA
                    END,
                    ' '
            ) as MO_CSECTIONNICK,
            MO.MO_NSEQ,
            MO.MO_NHR
        FROM
            MAST_ORGANISATION MO
        WHERE
            MO.MO_DSTART <![CDATA[ <= ]]> #{startDate}
            AND MO.MO_DEND >= #{endDate}
            AND MO.MO_CCUSTOMERID_CK_FK = #{customerId}
            AND MO.MO_CCOMPANYID_CK_FK	= #{companyId}
            AND MO.MO_CLANGUAGE = 'ja'
            <if test='sExists!=null and sExists!=""'>
                ${sExists}
            </if>
        ORDER BY MO.MO_NSEQ,MO.MO_CCOMPANYID_CK_FK,MO.MO_CSECTIONID_CK
    </select>
    <select id="selectSectionRankDto"
            resultType="jp.smartcompany.job.modules.tmg.tmgbulknotification.dto.SectionRankDto">
        SELECT
            MO_CSECTIONID_CK
            ,RANK() OVER(ORDER BY MO_NLEVEL, MO_CSECTIONID_CK) RANK
        FROM
            (SELECT
                DISTINCT MO_NLEVEL
                ,MO_NSEQ
                ,MO_CSECTIONID_CK
                ,MO_CSECTIONNAME
                ,MO_CPARENTID
            FROM
                (SELECT
                     o.MO_NLEVEL
                    ,o.MO_NSEQ
                    ,o.MO_CSECTIONID_CK
                    ,o.MO_CSECTIONNAME
                    ,o.MO_CPARENTID
                FROM
                    MAST_ORGANISATION o
                WHERE
                    MO_CCUSTOMERID_CK_FK = #{custID}
                AND MO_CCOMPANYID_CK_FK = #{compCode}
                AND MO_CLANGUAGE = #{language}
                AND MO_DSTART <![CDATA[ <= ]]> SYSDATE
                AND MO_DEND >= SYSDATE
                AND MO_CSECTIONID_CK IN (${sectionId})
                )
            START WITH
            MO_CSECTIONID_CK in (${sectionId}) CONNECT BY
            MO_CSECTIONID_CK = PRIOR MO_CPARENTID
            ORDER SIBLINGS BY MO_NSEQ, MO_CSECTIONID_CK)

    </select>

</mapper>