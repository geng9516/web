<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.smartcompany.job.modules.core.mapper.PatternSettingMapper">

    <!-- TMG_PATTERNより利用可能な勤務パターンを取得する  -->
    <resultMap id="selectTmgPatternMap" type="jp.smartcompany.job.modules.tmg.patternsetting.dto.TmgPatternDTO">
        <result column="tpa_ccustomerid" property="tpa_ccustomerid"/>
        <result column="tpa_ccompanyid" property="tpa_ccompanyid"/>
        <result column="tpa_csectionid" property="tpa_csectionid"/>
        <result column="tpa_csectionname" property="tpa_csectionname"/>
        <result column="tpa_cgroupid" property="tpa_cgroupid"/>
        <result column="tpa_dstartdate" property="tpa_dstartdate"/>
        <result column="tpa_denddate" property="tpa_denddate"/>
        <result column="tpa_cpatternid" property="tpa_cpatternid"/>
        <result column="tpa_cpatternname" property="tpa_cpatternname"/>
        <result column="tpa_cdefaultflg" property="tpa_cdefaultflg"/>
        <result column="timerange" property="timerange"/>
        <result column="tpa_ndate_change_time" property="tpa_ndate_change_time"/>
        <result column="tpa_c2caldays" property="tpa_c2caldays"/>
        <result column="tpa_cnextptn" property="tpa_cnextptn"/>
        <result column="cnextptname" property="cnextptname"/>
    </resultMap>

    <!-- 該当者毎に設定されている勤務パターンの情報を取得する -->
    <resultMap id="selectTmgPatternAppliesMap" type="jp.smartcompany.job.modules.tmg.patternsetting.dto.TmgPatternAppliesDTO">
        <result column="cust" property="cust"/>
        <result column="comp" property="comp"/>
        <result column="empid" property="empid"/>
        <result column="empname" property="empname"/>
        <result column="tpaa_cpatternid" property="tpaa_cpatternid"/>
        <result column="tpa_cpatternname" property="tpa_cpatternname"/>
        <result column="cworktypeid" property="cworktypeid"/>
        <result column="cworktypename" property="cworktypename"/>
    </resultMap>

    <!-- 勤務時間・休憩時間の制限値取得 -->
    <resultMap id="selectRestTimeLimitMap" type="jp.smartcompany.job.modules.tmg.patternsetting.dto.RestTimeLimitDTO">
        <result column="genericCode" property="genericCode"/>
        <result column="genericDesc" property="genericDesc"/>
        <result column="limit_rest_lower" property="limit_rest_lower"/>
        <result column="limit_work_lower" property="limit_work_lower"/>
        <result column="limit_work_upper" property="limit_work_upper"/>
    </resultMap>

    <!-- 勤務パターン　保存する -->
    <parameterMap id="insertTmgPatternMap" type="jp.smartcompany.job.modules.tmg.patternsetting.dto.TmgPatternInsertDTO">
        <parameter property="custId"/>
        <parameter property="compCode"/>
        <parameter property="sectionId"/>
        <parameter property="groupId"/>
        <parameter property="minDate"/>
        <parameter property="maxDate"/>
        <parameter property="employeeId"/>
        <parameter property="modifierprogramid"/>
        <parameter property="patternId"/>
        <parameter property="patternName"/>
        <parameter property="defaultFlag"/>
        <parameter property="changeTime"/>
        <parameter property="nextptn"/>
        <parameter property="c2caldays"/>
        <parameter property="nopen"/>
        <parameter property="nclose"/>
    </parameterMap>

    <!-- 勤務パターン休憩時間DTO -->
    <parameterMap id="insertTmgPatternRestPluralMap" type="jp.smartcompany.job.modules.tmg.patternsetting.dto.TmgPatternRestDTO">
        <parameter property="custId"/>
        <parameter property="compCode"/>
        <parameter property="sectionId"/>
        <parameter property="groupId"/>
        <parameter property="minDate"/>
        <parameter property="maxDate"/>
        <parameter property="employeeId"/>
        <parameter property="modifierprogramid"/>
        <parameter property="patternId"/>
        <parameter property="restOpen"/>
        <parameter property="restClose"/>
    </parameterMap>

    <!-- TMG_PATTERNより利用可能な勤務パターンを取得する  -->
    <select id="selectTmgPattern" parameterType="java.util.HashMap" resultMap="selectTmgPatternMap">
        select tab1.ccustomerid as tpa_ccustomerid
            ,tab1.ccompanyid as tpa_ccompanyid
            ,tab1.csectionid as tpa_csectionid
            ,tab1.csectionname as tpa_csectionname
            ,tab1.cgroupid as tpa_cgroupid
            ,tab1.dstartdate as tpa_dstartdate
            ,tab1.denddate as tpa_denddate
            ,tab1.cpatternid as tpa_cpatternid
            ,tab1.cpatternname as tpa_cpatternname
            ,tab1.cdefaultflg as tpa_cdefaultflg
            ,tmg_f_timerange_table_json(tab1.timerange) as timerange
            ,tmg_f_conv_min2hhmi(tab1.ndate_change_time, 0) as tpa_ndate_change_time
            ,tab1.c2caldays as tpa_c2caldays
            ,tab1.cnextptn as tpa_cnextptn
            ,tab2.tpa_cpatternname as cnextptname
          from table(tmg_f_get_tmg_pattern_list(#{custId},#{compCode}, #{sectionId}, <if test="groupId=='null'">'',</if><if test="groupId != 'null'"> ${groupId},</if> trunc(sysdate))) tab1,tmg_pattern tab2 where tab1.cnextptn = tab2.tpa_cpatternid(+)
                  order by tab1.csectionid, tab1.cgroupid, tab1.cpatternid
    </select>

    <!-- TMG_PATTERNより利用可能な勤務パターンを取得する(自組織分)  -->
    <select id="selectTmgPatternOwn" parameterType="java.util.HashMap" resultMap="selectTmgPatternMap">
        select tab1.ccustomerid as tpa_ccustomerid
            ,tab1.ccompanyid as tpa_ccompanyid
            ,tab1.csectionid as tpa_csectionid
            ,tab1.cgroupid as tpa_cgroupid
            ,tab1.dstartdate as tpa_dstartdate
            ,tab1.denddate as tpa_denddate
            ,tab1.cpatternid as tpa_cpatternid
            ,tab1.cpatternname as tpa_cpatternname
            ,tab1.cdefaultflg as tpa_cdefaultflg
            ,tmg_f_timerange_table_json(tab1.timerange) as timerange
            ,tmg_f_conv_min2hhmi(tab1.ndate_change_time, 0) as tpa_ndate_change_time
            ,tab1.c2caldays as tpa_c2caldays
            ,tab1.cnextptn as tpa_cnextptn
            ,tab2.tpa_cpatternname as cnextptname
          from table(tmg_f_get_tmg_pattern_list(#{custId},#{compCode},#{sectionId}, <if test="groupId=='null'">'',</if><if test="groupId != 'null'"> ${groupId},</if>, trunc(sysdate))) tab1,tmg_pattern tab2 where tab1.cnextptn = tab2.tpa_cpatternid(+)
             where  tab1.cnextptn = tab2.tpa_cpatternid(+) and tab1.csectionid = #{sectionId}
               order by tab1.csectionid, tab1.cgroupid, tab1.cpatternid
    </select>

    <!-- パターン編集画面のパターン情報 -->
    <select id="selectTmgPatternById" parameterType="java.util.HashMap" resultMap="selectTmgPatternMap">
        select ccustomerid as tpa_ccustomerid
            ,ccompanyid as tpa_ccompanyid
            ,csectionid as tpa_csectionid
            ,cgroupid as tpa_cgroupid
            ,dstartdate as tpa_dstartdate
            ,denddate as tpa_denddate
            ,cpatternid as tpa_cpatternid
            ,cpatternname as tpa_cpatternname
            ,cdefaultflg as tpa_cdefaultflg
            ,tmg_f_timerange_table_json(timerange) as timerange
            ,tmg_f_conv_min2hhmi(ndate_change_time, 0) as tpa_ndate_change_time
            ,c2caldays as tpa_c2caldays
            ,cnextptn as tpa_cnextptn
          from table(tmg_f_get_tmg_pattern_list(#{custId},#{compCode}, <if test="groupId=='null'">'',</if><if test="groupId != 'null'"> ${groupId},</if>, null, trunc(sysdate)))
             where cpatternid=#{patternId}
    </select>


    <!-- 該当者毎に設定されている勤務パターンの情報を取得する -->
    <select id="selectTmgPatternApplies" parameterType="java.util.HashMap" resultMap="selectTmgPatternAppliesMap">
        select t0.cust
        ,t0.comp
        ,t0.empid
        ,t0.empname
        ,tmg_f_get_pattern_default(t0.cust, t0.comp, t0.empid, to_date(#{baseDate}, 'yyyy/mm/dd')) .cpatternid as tpaa_cpatternid
        ,tmg_f_get_pattern_default(t0.cust, t0.comp, t0.empid, to_date(#{baseDate}, 'yyyy/mm/dd')) .cpatternname as tpa_cpatternname
        ,tmg_get_worktypeid(t0.cust, t0.comp, t0.empid, to_date(#{baseDate}, 'yyyy/mm/dd')) as cworktypeid
        ,tmg_f_get_mgd(tmg_get_worktypeid(t0.cust, t0.comp, t0.empid,to_date(#{baseDate}, 'yyyy/mm/dd')), to_date(#{baseDate},'yyyy/mm/dd'), t0.cust, t0.comp, #{language}) as cworktypename
        ,(select decode(count(1), 0, 0, 1)
        from tmg_personal_pattern
        where tppa_ccustomerid = t0.cust
        and tppa_ccompanyid = t0.comp
        and tppa_cemployeeid = t0.empid
        and to_date(#{baseDate}, 'yyyy/mm/dd') between tppa_dstartdate
        and tppa_denddate and (tppa_nkinmu_num1 is not null
        or tppa_nkinmu_num2 is not null
        or tppa_nkinmu_num3 is not null
        or tppa_nkinmu_num4 is not null
        or tppa_nkinmu_num5 is not null)) as personal_pattern_use
        from (
        <if test="targetEmployees != null">
            ${targetEmployees}
        </if>
        ) t0
        where exists (select 1
        from tmg_group_member
        where tgrm_ccustomerid = t0.cust
        and tgrm_ccompanyid = t0.comp
        and tgrm_cemployeeid = t0.empid
        and tgrm_dstartdate <![CDATA[<=]]> to_date(#{baseDate}, 'yyyy/mm/dd')
        and tgrm_denddate <![CDATA[>=]]> to_date(#{baseDate}, 'yyyy/mm/dd'))
        order by empid
    </select>

    <!--  勤務時間・休憩時間の制限値取得 -->
    <select id="selectRestTimeLimit" parameterType="java.util.HashMap" resultMap="selectRestTimeLimitMap">
        select mgd_cgenericdetailid_ck as genericCode
            ,mgd_csparechar1 as genericDesc
            ,mgd_nsparenum1 as limit_rest_lower
            ,mgd_nsparenum2 as limit_work_lower
            ,mgd_nsparenum3 as limit_work_upper
        from mast_generic_detail
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_clanguage_ck = #{language}
        and mgd_cgenericgroupid = 'TMG_LIMIT'
        and mgd_cgenericdetailid_ck like 'RESTTIME%'
        and mgd_dstart_ck <![CDATA[<=]]>  trunc(sysdate)
        and mgd_dend  <![CDATA[>=]]> trunc(sysdate)
        order by mgd_cmastercode
    </select>

    <!-- 編集画面の翌日勤務パターンリスト -->
    <select id="selectPatternSelectList" parameterType="java.util.HashMap" resultMap="selectTmgPatternMap">
        select ccustomerid as tpa_ccustomerid
        ,ccompanyid as tpa_ccompanyid
        ,csectionid as tpa_csectionid
        ,cgroupid as tpa_cgroupid
        ,dstartdate as tpa_dstartdate
        ,denddate as tpa_denddate
        ,cpatternid as tpa_cpatternid
        ,cpatternname as tpa_cpatternname
        ,cdefaultflg as tpa_cdefaultflg
        ,tmg_f_timerange_table_json(timerange) as timerange
        ,tmg_f_conv_min2hhmi(ndate_change_time, 0) as tpa_ndate_change_time
        ,c2caldays as tpa_c2caldays
        ,cnextptn as tpa_cnextptn
        from table(tmg_f_get_tmg_pattern_list(#{custId},#{compCode}, <if test="groupId=='null'">'',</if><if test="groupId != 'null'"> ${groupId},</if>, null, trunc(sysdate)))
        <!-- 編集の場合、選択したパターンが表示しない -->
        <if test="patternId != null">
            where cpatternid<![CDATA[<>]]> #{patternId}
        </if>
        order by csectionid, cgroupid, cpatternid
    </select>

    <!-- DELETE TMG_PATTERN -->
    <delete id="deleteTmgPattern" parameterType="java.util.HashMap">
        delete from tmg_pattern
        where tpa_ccustomerid = #{custId}
        and tpa_ccompanyid = #{compCode}
        <if test="sectionId != null">
            and tpa_csectionid = #{sectionId}
        </if>
        <if test="sectionId == null">
            and tpa_csectionid is null
        </if>
        <if test="groupId != null">
            and tpa_cgroupid = #{groupId}
        </if>
        <if test="groupId == null">
            and tpa_cgroupid is null
        </if>
        and tpa_cpatternid = #{patternId}
    </delete>

    <!-- DELETE TMG_PATTERN_REST -->
    <delete id="deleteTmgPatternRest" parameterType="java.util.HashMap">
        delete from tmg_pattern_rest
        where tpr_ccustomerid = #{custId}
        and tpr_ccompanyid = #{compCode}
        <if test="sectionId != null">
            and tpr_csectionid = #{sectionId}
        </if>
        <if test="sectionId == null">
            and tpr_csectionid is null
        </if>
        <if test="groupId != null">
            and tpr_cgroupid = #{groupId}
        </if>
        <if test="groupId == null">
            and tpr_cgroupid is null
        </if>
        and tpr_cpatternid = #{patternId}
    </delete>

    <!-- DELETE TMG_PATTERN_APPLIES -->
    <delete id="deleteTmgPatternApplies" parameterType="java.util.HashMap">
        delete from tmg_pattern_applies
        where tpaa_ccustomerid = #{custId}
        and tpaa_ccompanyid = #{compCode}
        <if test="sectionId != null">
            and tpaa_csectionid = #{sectionId}
        </if>
        <if test="sectionId == null">
            and tpaa_csectionid is null
        </if>
        <if test="groupId != null">
            and tpaa_cgroupid = #{groupId}
        </if>
        <if test="groupId == null">
            and tpaa_cgroupid is null
        </if>
        and tpaa_cpatternid = #{patternId}
    </delete>

    <!-- ディフォルトセット -->
    <update id="updateTmgPattern" parameterType="java.util.HashMap">
        update tmg_pattern
        set tpa_cmodifieruserid = #{employeeId},
            tpa_dmodifieddate = sysdate,
            tpa_cmodifierprogramid = #{modifierprogramid},
            tpa_cdefaultflg = 'TMG_ONOFF|0'
        where tpa_ccustomerid = #{custId}
        and tpa_ccompanyid = #{compCode}
        and tpa_csectionid =  #{sectionId}
        and tpa_cgroupid = #{groupId}
        and tpa_cdefaultflg = 'TMG_ONOFF|1'
        and tpa_dstartdate <![CDATA[<=]]> trunc(sysdate)
        and tpa_denddate <![CDATA[>=]]> trunc(sysdate)
    </update>

    <!-- 勤務パターン　保存する -->
    <insert id="insertTmgPattern" parameterMap="insertTmgPatternMap">
        insert into tmg_pattern
            (tpa_ccustomerid, tpa_ccompanyid, tpa_csectionid, tpa_cgroupid,
            tpa_dstartdate, tpa_denddate, tpa_cmodifieruserid,
            tpa_dmodifieddate, tpa_cmodifierprogramid, tpa_cpatternid,
            tpa_cpatternname, tpa_cdefaultflg, tpa_ndate_change_time,
            tpa_cnextptn, tpa_c2caldays, tpa_nopen, tpa_nclose)
        values
            (#{custId},#{compCode}, #{sectionId},  #{groupId},
            to_date(#{minDate}, 'yyyy/mm/dd'), to_date(#{maxDate},'yyyy/mm/dd'), #{employeeId},
            sysdate,#{modifierprogramid},#{patternId},
            #{patternName},#{defaultFlag}, tmg_f_conv_hhmi2min(#{changeTime}),
            #{nextptn},#{c2caldays}, tmg_f_conv_hhmi2min(#{nopen}), tmg_f_conv_hhmi2min(#{nclose}))
    </insert>

    <!-- 勤務パターン休憩時間　保存する -->
    <insert id="insertTmgPatternRestPlural" parameterMap="insertTmgPatternRestPluralMap">
        insert into tmg_pattern_rest
            (tpr_ccustomerid, tpr_ccompanyid, tpr_csectionid, tpr_cgroupid,
            tpr_dstartdate, tpr_denddate, tpr_cmodifieruserid,
            tpr_dmodifieddate, tpr_cmodifierprogramid, tpr_cpatternid, tpr_seq,
            tpr_nrestopen, tpr_nrestclose)
        values
            (#{custId},#{compCode}, #{sectionId},  #{groupId},
             to_date(#{minDate}, 'yyyy/mm/dd'), to_date(#{maxDate},'yyyy/mm/dd'), #{employeeId},
            sysdate, #{modifierprogramid},#{patternId}, 1,
            tmg_f_conv_hhmi2min(#{restOpen}), tmg_f_conv_hhmi2min(#{restClose}))
    </insert>

    <!-- 勤務パターンを適用可能な最少日付を取得 -->
    <select id="selectEditPeriodDate" resultType="java.lang.String">
        select to_char(add_months(trunc(sysdate,'mm'), 1), 'yyyy/mm/dd') as periodDate from dual
    </select>

    <!-- 時刻の規定範囲を取得します -->
    <select id="selectDayOpenClose" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select tmg_f_conv_min2hhmi(tco_nopen) as OPEN,tmg_f_conv_min2hhmi(tco_nclose) as CLOSE from tmg_company
    </select>

    <!-- 指定された勤務パターンIDがDBに存在している場合 -->
    <select id="checkPatternId" parameterType="java.util.HashMap" resultType="java.lang.String">
        select tpa_cpatternid from tmg_pattern where tpa_cpatternid = #{patternId} and tpa_ccompanyid=#{compCode} and tpa_dstartdate <![CDATA[<=]]> trunc(sysdate)
    </select>

</mapper>