<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.smartcompany.job.modules.core.mapper.TmgScheduleMapper">

    <!-- 年次休暇残 -->
    <resultMap id="selectTmgMonthlyMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.NpaidRestDTO">
        <result column="tmo_npaid_rest_days" property="tmo_npaid_rest_days" javaType="java.lang.String"/>
        <result column="tmo_npaid_rest_hours" property="tmo_npaid_rest_hours" javaType="java.lang.String"/>
        <result column="tmo_nmonth_chk_flg" property="tmo_nmonth_chk_flg" javaType="java.lang.String"/>
    </resultMap>

    <!-- [勤怠]日別情報より予定データを取得します -->
    <resultMap id="selectScheduleMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.ScheduleDataDTO">
        <result column="tda_nmmdd" property="tda_nmmdd" javaType="java.lang.String"/>
        <result column="tda_nmmday" property="tda_nmmday" javaType="java.lang.String"/>
        <result column="tda_cworkingid_mm" property="tda_cworkingid_mm" javaType="java.lang.String"/>
        <result column="tda_nopen_p" property="tda_nopen_p" javaType="java.lang.String"/>
        <result column="tda_nclose_p" property="tda_nclose_p" javaType="java.lang.String"/>
        <result column="tda_nrestopen_p" property="tda_nrestopen_p" javaType="java.lang.String"/>
        <result column="tda_nrestclose_p" property="tda_nrestclose_p" javaType="java.lang.String"/>
        <result column="tda_cmessage" property="tda_cmessage" javaType="java.lang.String"/>
        <result column="tda_nlock_p" property="tda_nlock_p" javaType="java.lang.Integer"/>
        <result column="tda_cworkingid_p" property="tda_cworkingid_p" javaType="java.lang.String"/>
        <result column="tda_ccustomerid" property="tda_ccustomerid" javaType="java.lang.String"/>
        <result column="tda_cbusinesstripid_p" property="tda_cbusinesstripid_p" javaType="java.lang.String"/>
        <result column="tda_cbusinesstripid_mm" property="tda_cbusinesstripid_mm" javaType="java.lang.String"/>
        <result column="tda_ccomment_p" property="tda_ccomment_p" javaType="java.lang.String"/>
        <result column="tda_dmmdd" property="tda_dmmdd" javaType="java.lang.String"/>
        <result column="avgworktime" property="avgworktime" javaType="java.lang.String"/>
        <result column="mgd_csparechar4" property="mgd_csparechar4" javaType="java.lang.String"/>
        <result column="timerange" property="timerange" javaType="java.lang.String"/>
        <result column="duty" property="duty" javaType="java.lang.String"/>
        <result column="astem_cworktypeid" property="astem_cworktypeid" javaType="java.lang.String"/>
        <result column="json" property="json" javaType="java.lang.String"/>
        <result column="holflgCalendar" property="holflgCalendar" javaType="java.lang.String"/>
    </resultMap>

    <!--  対象ユーザー情報 -->
    <resultMap id="selectTargetUserDetailMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.TargetUserDetailDTO">
        <result column="name" property="name" javaType="java.lang.String"/>
        <result column="dept" property="dept" javaType="java.lang.String"/>
        <result column="workType" property="workType" javaType="java.lang.String"/>
        <result column="workTypeCode" property="workTypeCode" javaType="java.lang.String"/>
        <result column="posi" property="posi" javaType="java.lang.String"/>
    </resultMap>

    <!--  今月の月中有給付与の情報 -->
    <resultMap id="selectHalfwayPaidHolidayMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.HalfwayPaidHolidayDTO">
        <result column="tmo_npaid_begining_days" property="tmo_npaid_begining_days" javaType="java.lang.String"/>
        <result column="tmo_npaid_begining_hours" property="tmo_npaid_begining_hours" javaType="java.lang.String"/>
        <result column="tmo_npaid_rest_days" property="tmo_npaid_rest_days" javaType="java.lang.String"/>
        <result column="tmo_npaid_rest_hours" property="tmo_npaid_rest_hours" javaType="java.lang.String"/>
    </resultMap>

    <!--  週勤務パターン -->
    <resultMap id="selectTmgWeekPatternMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.TmgWeekPatternDTO">
        <result column="twp_dstartdate" property="twp_dstartdate" javaType="java.lang.String"/>
        <result column="twp_denddate" property="twp_denddate" javaType="java.lang.String"/>
        <result column="twp_nid" property="twp_nid" javaType="java.lang.String"/>
    </resultMap>

    <!--  週勤務パターンを取得する -->
    <resultMap id="selectCsvReferenceMap" type="jp.smartcompany.job.modules.tmg.schedule.vo.TmgWeekPatternVO">
        <result column="twp_nid" property="twp_nid" javaType="java.lang.String"/>
        <result column="twp_cemployeeid" property="twp_cemployeeid" javaType="java.lang.String"/>
        <result column="twp_dstartdate" property="twp_dstartdate" javaType="java.lang.String"/>
        <result column="twp_denddate" property="twp_denddate" javaType="java.lang.String"/>
        <result column="period" property="period" javaType="java.lang.String"/>
        <result column="twp_copen1" property="twp_copen1" javaType="java.lang.String"/>
        <result column="twp_cclose1" property="twp_cclose1" javaType="java.lang.String"/>
        <result column="rest1" property="rest1" javaType="java.lang.String"/>
        <result column="workname1" property="workname1" javaType="java.lang.String"/>
        <result column="twp_copen2" property="twp_copen2" javaType="java.lang.String"/>
        <result column="twp_cclose2" property="twp_cclose2" javaType="java.lang.String"/>
        <result column="rest2" property="rest2" javaType="java.lang.String"/>
        <result column="workname2" property="workname2" javaType="java.lang.String"/>
        <result column="twp_copen3" property="twp_copen3" javaType="java.lang.String"/>
        <result column="twp_cclose3" property="twp_cclose3" javaType="java.lang.String"/>
        <result column="rest3" property="rest3" javaType="java.lang.String"/>
        <result column="workname3" property="workname3" javaType="java.lang.String"/>
        <result column="twp_copen4" property="twp_copen4" javaType="java.lang.String"/>
        <result column="twp_cclose4" property="twp_cclose4" javaType="java.lang.String"/>
        <result column="rest4" property="rest4" javaType="java.lang.String"/>
        <result column="workname4" property="workname4" javaType="java.lang.String"/>
        <result column="twp_copen5" property="twp_copen5" javaType="java.lang.String"/>
        <result column="twp_cclose5" property="twp_cclose5" javaType="java.lang.String"/>
        <result column="rest5" property="rest5" javaType="java.lang.String"/>
        <result column="workname5" property="workname5" javaType="java.lang.String"/>
        <result column="twp_copen6" property="twp_copen6" javaType="java.lang.String"/>
        <result column="twp_cclose6" property="twp_cclose6" javaType="java.lang.String"/>
        <result column="rest6" property="rest6" javaType="java.lang.String"/>
        <result column="workname6" property="workname6" javaType="java.lang.String"/>
        <result column="twp_copen7" property="twp_copen7" javaType="java.lang.String"/>
        <result column="twp_cclose7" property="twp_cclose7" javaType="java.lang.String"/>
        <result column="rest7" property="rest7" javaType="java.lang.String"/>
        <result column="workname7" property="workname7" javaType="java.lang.String"/>
    </resultMap>

    <resultMap id="selectTmgStatusMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.TmgStatusDTO">
        <result column="fixed_monthly" property="fixed_monthly" javaType="java.lang.String"/>
        <result column="fixed_salary" property="fixed_salary" javaType="java.lang.String"/>
        <result column="tda_cstatusflg" property="tda_cstatusflg" javaType="java.lang.String"/>
        <result column="tmo_cstatusflg" property="tmo_cstatusflg" javaType="java.lang.String"/>
        <result column="is_future" property="is_future" javaType="java.lang.String"/>
    </resultMap>

    <!--  [勤怠]週次勤務パターン（エラーチェック用）登録  -->
    <parameterMap id="insertTmgWeekPatternCheckMap" type="jp.smartcompany.job.modules.tmg.schedule.dto.TmgWeekPatternCheckDTO">
        <parameter property="custId"></parameter>
        <parameter property="compCode"></parameter>
        <parameter property="employeeId"></parameter>
        <parameter property="twp_cmodifieruserid"></parameter>
        <parameter property="twp_cmodifierprogramid"></parameter>
        <parameter property="twp_dstartdate"></parameter>
        <parameter property="twp_denddate"></parameter>
        <parameter property="period"></parameter>
        <parameter property="twp_copen1"></parameter>
        <parameter property="twp_cclose1"></parameter>
        <parameter property="twp_crestopen1"></parameter>
        <parameter property="twp_crestclose1"></parameter>
        <parameter property="twp_cholflg1"></parameter>
        <parameter property="twp_copen2"></parameter>
        <parameter property="twp_cclose2"></parameter>
        <parameter property="twp_crestopen2"></parameter>
        <parameter property="twp_crestclose2"></parameter>
        <parameter property="twp_cholflg2"></parameter>
        <parameter property="twp_copen3"></parameter>
        <parameter property="twp_cclose3"></parameter>
        <parameter property="twp_crestopen3"></parameter>
        <parameter property="twp_crestclose3"></parameter>
        <parameter property="twp_cholflg3"></parameter>
        <parameter property="twp_copen4"></parameter>
        <parameter property="twp_cclose4"></parameter>
        <parameter property="twp_crestopen4"></parameter>
        <parameter property="twp_crestclose4"></parameter>
        <parameter property="twp_cholflg4"></parameter>
        <parameter property="twp_copen5"></parameter>
        <parameter property="twp_cclose5"></parameter>
        <parameter property="twp_crestopen5"></parameter>
        <parameter property="twp_crestclose5"></parameter>
        <parameter property="twp_cholflg5"></parameter>
        <parameter property="twp_copen6"></parameter>
        <parameter property="twp_cclose6"></parameter>
        <parameter property="twp_crestopen6"></parameter>
        <parameter property="twp_crestclose6"></parameter>
        <parameter property="twp_cholflg6"></parameter>
        <parameter property="twp_copen7"></parameter>
        <parameter property="twp_cclose7"></parameter>
        <parameter property="twp_crestopen7"></parameter>
        <parameter property="twp_crestclose7"></parameter>
        <parameter property="twp_cholflg7"></parameter>
    </parameterMap>

    <resultMap id="selectWeekPtnMap" type="jp.smartcompany.job.modules.tmg.schedule.vo.WeekWorkType">
        <result column="mgd_work" property="mgd_work"/>
        <result column="mgd_workname" property="mgd_workname"/>
    </resultMap>


    <!-- 年次休暇残 -->
    <select id="selectTmgMonthly" parameterType="java.util.HashMap" resultMap="selectTmgMonthlyMap">
        select tmo_npaid_rest_days,tmo_npaid_rest_hours as tmo_npaid_rest_hours,nvl(tmo_nmonth_chk_flg, 0) as tmo_nmonth_chk_flg
        from tmg_monthly
        where tmo_cemployeeid = #{employeeId}
        and tmo_dyyyymm = trunc(to_date(#{workYear}), 'mm')
        and tmo_ccompanyid = #{compCode}
        and tmo_ccustomerid = #{custId}
        and tmo_dstartdate <![CDATA[<=]]>  trunc(to_date(#{workYear}), 'mm')
        and tmo_denddate <![CDATA[>=]]> trunc(to_date(#{workYear}), 'mm')
    </select>

    <!-- [勤怠]日別情報より予定データを取得します -->
    <select id="selectSchedule" parameterType="java.util.HashMap" resultMap="selectScheduleMap">
        select
        case when rownum = 1 and to_char(tda_dyyyymmdd, 'dd')<![CDATA[!=]]>'01' then
        to_char(tda_dyyyymmdd,'mm/dd')
        when rownum > 1 and to_char(tda_dyyyymmdd, 'dd') = '01' then
        to_char(tda_dyyyymmdd,'mm/dd')
        else
        to_char(tda_dyyyymmdd, 'dd')
        end as tda_nmmdd ,
        to_char(tda_dyyyymmdd, 'dy') as tda_nmmday ,
        tmg_f_get_mgd(tda_cworkingid_p, trunc((to_date(#{dStart})), 'mm')) as tda_cworkingid_mm,
        nvl(tmg_f_conv_min2hhmi(tda_nopen_p, 0), ' ') as tda_nopen_p ,
        nvl(tmg_f_conv_min2hhmi(tda_nclose_p, 0), ' ') as tda_nclose_p ,
        tmg_f_conv_min2hhmi(tda_nrestopen_p, 0) as tda_nrestopen_p ,
        tmg_f_conv_min2hhmi(tda_nrestclose_p, 0) as tda_nrestclose_p ,
        nvl(tda_cmessage, ' ') tda_cmessage,
        greatest(tda_nlock_p,${useFixedFunction}(tda_cemployeeid, tda_dyyyymmdd,tda_ccustomerid, tda_ccompanyid)) as tda_nlock_p ,
        tda_cworkingid_p ,
        to_char(tda_dyyyymmdd, 'yyyy/mm/dd') as tda_ccustomerid ,
        tda_cstatusflg ,
        tda_cbusinesstripid_p ,
        tmg_f_get_mgd(tda_cbusinesstripid_p, trunc((to_date(#{dStart})),'mm')) tda_cbusinesstripid_mm,
        tda_ccomment_p ,
        to_char(tda_dyyyymmdd, 'mm/dd') tda_dmmdd,
        nvl(tmg_f_get_avgworktime(tda_cemployeeid, tda_dyyyymmdd,tda_ccustomerid, tda_ccompanyid), '0') as avgworktime,
        tmg_f_get_employees_workday(tda_cworkingid_p, tda_ccustomerid,tda_ccompanyid) as mgd_csparechar4 ,
        tmg_f_timerange_table_json(tmg_f_get_timerange_tbl_tdad(tda_ccustomerid, tda_ccompanyid, tda_cemployeeid,tda_dyyyymmdd, #{ctpye_plan}, null)) as timerange,
        tmg_f_get_dutyresults(tda_cemployeeid, tda_dyyyymmdd,tda_ccustomerid, tda_ccompanyid, #{language}) as duty,
        tmg_f_get_workertype(tda_cemployeeid, tda_dyyyymmdd) as astem_cworktypeid,
        tmg_f_timerange_table_json((tmg_f_get_pattern_default(tda_ccustomerid, tda_ccompanyid,tda_cemployeeid, tda_dyyyymmdd)) .timerange) as json,
        tmg_f_get_holflg_of_calendar(tda_dyyyymmdd, tda_ccustomerid,tda_ccompanyid, tda_cemployeeid) as holflgCalendar
        from tmg_daily
        where tda_cemployeeid = #{employeeId}
        and tda_ccompanyid = #{compCode}
        and tda_ccustomerid = #{custId}
        <if test="isVariationalWorkDays == false">
            and tda_dyyyymmdd <![CDATA[>=]]>  to_date(#{dStart}, 'yyyy/mm/dd')  <!-- 日曜日 -->
            and tda_dyyyymmdd <![CDATA[<=]]> to_date(#{dEnd}, 'yyyy/mm/dd')     <!-- 土曜日 -->
        </if>
        <if test="isVariationalWorkDays == true">
            and tda_dyyyymmdd <![CDATA[>=]]>  to_date(#{dStart}, 'yyyy/mm/dd')
            and tda_dyyyymmdd <![CDATA[<=]]> to_date(#{dEnd}, 'yyyy/mm/dd')
        </if>
        and #{manageflg} <![CDATA[!=]]> tmg_f_is_manageflg(#{employeeId}, trunc(to_date(#{dStart}, 'yyyy/mm/dd')), last_day(to_date(#{dEnd}, 'yyyy/mm/dd')), #{compCode}, #{custId})
        order by tda_dyyyymmdd
    </select>

    <!-- 4週間単位の変形労働制職員対応 -->
    <select id="selectBaseDateOf4WeeksBeforeDay" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select pre_data.pre_start,pre_data.pre_end
                from (select to_char (decode(tmg_f_get_basedate_fourweeks(0 ,to_date(#{baseDate}, 'yyyy/mm/dd') - 1 , to_date(#{detailPeriod}, 'yyyy/mm/dd'), #{employeeId} ,  #{compCode} ,#{custId}), null, trunc(to_date(#{baseDate},'yyyy/mm/dd') - 1, 'mm'),tmg_f_get_basedate_fourweeks(0 , to_date(#{baseDate},'yyyy/mm/dd') - 1 , to_date(#{detailPeriod},'yyyy/mm/dd'),#{employeeId} , '01' , '01')),'yyyy/mm/dd') as pre_start
                        ,to_char (decode(tmg_f_get_basedate_fourweeks(0 , to_date(#{baseDate}, 'yyyy/mm/dd') - 1 , to_date(#{detailPeriod}, 'yyyy/mm/dd'),#{employeeId},  #{compCode} ,#{custId}), null, last_day(to_date(#{baseDate},'yyyy/mm/dd') - 1), to_date(tmg_f_get_basedate_fourweeks(0 , to_date(#{baseDate}, 'yyyy/mm/dd') - 1 , to_date(#{detailPeriod}, 'yyyy/mm/dd'),#{employeeId},'01' , '01'), 'yyyy-mm-dd') + 7 * 4 - 1),'yyyy/mm/dd') as pre_end
                        from dual) pre_data
                where exists(select 1 from tmg_daily
                                where tda_ccustomerid = #{custId}
                                and tda_ccompanyid = #{compCode}
                                and tda_cemployeeid = #{employeeId}
                                and tda_dyyyymmdd <![CDATA[<=]]> pre_data.pre_end)
    </select>

    <!-- 4週間単位の変形労働制職員対応 -->
    <select id="SelectBaseDateOf4WeeksAfterDay" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select next_data.next_start,next_data.next_end
              from (select to_char (decode(tmg_f_get_basedate_fourweeks(1 ,to_date(#{baseDate}, 'yyyy/mm/dd') + 1 ,to_date(#{detailPeriod}, 'yyyy/mm/dd'),#{employeeId}, #{compCode} , #{custId}), null, add_months(trunc(to_date(#{baseDate}, 'yyyy/mm/dd'), 'mm'), 1),
                            tmg_f_get_basedate_fourweeks(1 , to_date(#{baseDate},'yyyy/mm/dd') + 1 , to_date(#{detailPeriod},'yyyy/mm/dd'), #{employeeId}, #{compCode} , #{custId})),'yyyy/mm/dd') as next_start
                    ,to_char (decode(tmg_f_get_basedate_fourweeks(1 , to_date(#{baseDate}, 'yyyy/mm/dd')+ 1 , to_date(#{detailPeriod}, 'yyyy/mm/dd'),#{employeeId} , #{compCode} , #{custId}), null, last_day(add_months(to_date(#{baseDate}, 'yyyy/mm/dd'), 1)),
                            to_date(tmg_f_get_basedate_fourweeks(1 , to_date(#{baseDate}, 'yyyy/mm/dd') + 1 ,to_date(#{detailPeriod}, 'yyyy/mm/dd'),#{employeeId} ,#{compCode} , #{custId}), 'yyyy-mm-dd') + 7 *4 - 1), 'yyyy/mm/dd') as next_end
                  from dual) next_data
             where exists(select 1
                  from tmg_daily
                 where tda_ccustomerid = #{custId}
                   and tda_ccompanyid = #{compCode}
                   and tda_cemployeeid = #{employeeId}
                   and tda_dyyyymmdd <![CDATA[>=]]> next_data.next_start)
    </select>

    <!-- 翌月リンクを取得 -->
    <select id="selectLinkOfNextMonth" parameterType="java.util.HashMap" resultType="java.lang.String">
        select d.nextmonth
        from (select to_char(max(tmo_dyyyymm), 'yyyy/mm/dd') as nextmonth
        from tmg_monthly
        where tmo_cemployeeid = #{employeeId}
        and tmo_dyyyymm <![CDATA[<]]> trunc(to_date(#{baseDate}), 'mm')
        and tmo_ccompanyid = #{compCode}
        and tmo_ccustomerid = #{custId}
        and tmo_dstartdate <![CDATA[<=]]> #{baseDate}
        and tmo_denddate <![CDATA[>=]]> #{baseDate}) d
        where d.nextmonth is not null
    </select>

    <!-- 前月リンクを取得 -->
    <select id="selectLinkOfPreMonth" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select d.premonth
        ,to_char(last_day(d.premonth), 'yyyy/mm/dd') premonthlastday
        from (select to_char(min(tmo_dyyyymm), 'yyyy/mm/dd') as premonth
        from tmg_monthly
        where tmo_cemployeeid = #{employeeId}
        and tmo_dyyyymm > trunc(to_date(#{baseDate}), 'mm')
        and tmo_dyyyymm <![CDATA[<=]]> add_months(trunc(sysdate, 'mm'), 2)
        and tmo_ccompanyid = #{compCode}
        and tmo_ccustomerid = #{custId}
        and tmo_dstartdate <![CDATA[<=]]> #{baseDate}
        and tmo_denddate <![CDATA[>=]]> #{baseDate}) d
        where d.premonth is not null
    </select>

    <!--  対象ユーザー情報 -->
    <select id="selectTargetUserDetail" parameterType="java.util.HashMap" resultMap="selectTargetUserDetailMap">
        select tmg_f_get_me_name(#{employeeId}, to_date(#{baseDate},'yyyy/mm/dd'), 0, #{compCode} ,#{custId}) as name
            ,tmg_f_get_mo(#{targetSecCode}, to_date(#{baseDate}, 'yyyy/mm/dd'),0, #{compCode} ,#{custId}) as dept
            ,tmg_f_get_mgd(tmg_f_get_workertype(#{employeeId}, to_date(#{baseDate}, 'yyyy/mm/dd'), #{compCode} ,#{custId}), to_date(#{baseDate}, 'yyyy/mm/dd'), #{compCode} ,#{custId},  #{language}) as workType
            ,tmg_f_get_workertype(#{employeeId}, to_date(#{baseDate},'yyyy/mm/dd'), #{compCode} ,#{custId}) as workTypeCode
            ,(select tmg_f_get_mp(d.hd_cpostid_fk, to_date(#{startDispDate},'yyyy/mm/dd'), d.hd_ccustomerid_ck, d.hd_ccompanyid_ck, #{language}) as posi
              from hist_designation d
               where d.hd_ccustomerid_ck =  #{compCode}
               and d.hd_ccompanyid_ck = #{custId}
               and d.hd_cemployeeid_ck = #{employeeId}
               and trunc(to_date(#{startDispDate}, 'yyyy/mm/dd')) between d.hd_dstartdate_ck
               and d.hd_denddate and d.hd_cifkeyoradditionalrole = 0)
          from dual
    </select>

    <!--  平日時の勤務時間 -->
    <select id="selectWorkingHours" parameterType="java.util.HashMap" resultType="java.lang.String">
         select tmg_f_get_avgworktime( #{employeeId} ,to_date( #{baseDate}, 'yyyy/mm/dd') ,#{compCode} ,#{custId}) as workingHours from dual
    </select>

    <!--  今月の月中有給付与の情報 -->
    <select id="selectHalfwayPaidHoliday" parameterType="java.util.HashMap" resultType="java.lang.String">
        select tmo_npaid_begining_days
            ,tmo_npaid_begining_hours
            ,tmo_npaid_rest_days
            ,tmo_npaid_rest_hours
            ,to_char(tph_dyyyymmdd, 'mm月dd日') tph_dyyyymmdd
        from tmg_employees ,
            tmg_monthly ,
            tmg_paid_holiday
        where tem_ccustomerid = #{custId}
        and tem_ccompanyid = #{compCode}
        and tem_cemployeeid = #{employeeId}
        and tem_dstartdate <![CDATA[<=]]> trunc(sysdate)
        and tem_denddate <![CDATA[>=]]> trunc(sysdate)
        and tem_cworktypeid in ('tmg_workertype|20', 'tmg_workertype|30')
        and tmo_ccustomerid = tem_ccustomerid
        and tmo_ccompanyid = tem_ccompanyid
        and tmo_cemployeeid = tem_cemployeeid
        and tmo_dstartdate <![CDATA[<=]]> trunc(sysdate)
        and tmo_denddate <![CDATA[>=]]> trunc(sysdate)
        and tmo_dyyyymm = trunc(to_date(#{baseDate}), 'mm')
        and tph_ccustomerid = tem_ccustomerid
        and tph_ccompanyid = tem_ccompanyid
        and tph_cemployeeid = tem_cemployeeid
        and tph_dstartdate <![CDATA[<=]]> trunc(sysdate)
        and tph_denddate <![CDATA[>=]]> trunc(sysdate)
        and tph_dyyyymm = trunc(to_date(#{baseDate}), 'mm')
        and tph_dyyyymm <![CDATA[!=]]> tph_dyyyymmdd
    </select>

    <!--  週勤務パターン -->
    <select id="selectTmgWeekPattern" parameterType="java.util.HashMap" resultMap="selectTmgWeekPatternMap">
        select to_char(twp_dstartdate, 'yyyy/mm/dd') as twp_dstartdate
        ,to_char(twp_denddate , 'yyyy/mm/dd') as twp_denddate
        ,twp_nid
        from tmg_week_pattern
        where twp_ccustomerid = #{custId}
        and twp_ccompanyid = #{compCode}
        and twp_cemployeeid = #{employeeId}
        <!--and twp_denddate >= trunc(sysdate)-->
        <if test="isAfter == true">
            and twp_dstartdate <![CDATA[<]]> trunc(add_months(to_date(#{baseDate},'yyyy/MM/dd'), 1))
            and twp_denddate  <![CDATA[>=]]> trunc(to_date(#{baseDate},'yyyy/MM/dd'))
        </if>
        <if test="isAfter == false">
            and twp_denddate  <![CDATA[>=]]> trunc(to_date(#{baseDate},'yyyy/MM/dd'))
        </if>
        order by twp_denddate
    </select>

    <!-- 基準日時点で４週間の変形労働制対象者か -->
    <select id="selectVariationalWorkInfo" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(1) from mast_generic_detail g
        where g.mgd_cgenericdetailid_ck = #{employeeId}
        and g.mgd_ccustomerid =  #{custId}
        and g.mgd_cgenericgroupid = 'TMG_VARIATIONAL_WORK'
        and g.mgd_dend <![CDATA[>=]]> to_date(#{targetDate}, 'yyyy/mm/dd')
        and g.mgd_clanguage_ck = #{language}
        and g.mgd_dstart_ck <![CDATA[<=]]>  to_date(#{targetDate}, 'yyyy/mm/dd')
        and g.mgd_ccompanyid_ck_fk = #{compCode}
    </select>

    <!-- 基準日の月に４週間の変形労働制の期間が存在するか -->
    <select id="selectVariationalWorkDays" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        select count(1)
          from mast_generic_detail g
             where g.mgd_ccustomerid = #{custId}
               and g.mgd_ccompanyid_ck_fk = #{compCode}
               and g.mgd_cgenericgroupid = 'TMG_VARIATIONAL_WORK'
               and g.mgd_cgenericdetailid_ck =  #{employeeId}
               and g.mgd_clanguage_ck = #{language}
               and (trunc(g.mgd_dstart_ck, 'mm') = trunc(to_date(#{targetDate}, 'yyyy/mm/dd'), 'mm')
                    or trunc(g.mgd_dend, 'mm') = trunc(to_date(#{targetDate},'yyyy/mm/dd'), 'mm'))
    </select>

    <!-- 基本労働制対象者の表示開始?終了日の取得する -->
    <select id="selectDsipDate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select to_char(trunc(to_date(#{baseDate}), 'day'), 'yyyy/mm/dd') as start_date
              ,to_char(next_day(last_day(to_date(#{lastday})) - 1, 7),'yyyy/mm/dd') as end_date
          from tmg_monthly
         where tmo_cemployeeid = #{employeeId}
           and tmo_dyyyymm = trunc(to_date(#{baseDate}), 'mm')
           and tmo_ccompanyid = #{compCode}
           and tmo_ccustomerid = #{custId}
           and tmo_nmonth_chk_flg is null
    </select>

    <!-- 月末の次の土曜日まで表示する -->
    <select id="selectLinkOfNextMonthNextSaturday" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select d.premonth,to_char(last_day(d.premonth), 'yyyy/mm/dd') as premonth_lastday
        from (select to_char(min(tmo_dyyyymm), 'yyyy/mm/dd') as premonth
            from tmg_monthly
            where tmo_cemployeeid = #{employeeId}
            and tmo_dyyyymm <![CDATA[>]]> trunc(to_date(#{baseDate}), 'mm')
            and tmo_dyyyymm <![CDATA[<=]]> add_months(trunc(sysdate, 'mm'), 2)
            and tmo_ccompanyid = #{compCode}
            and tmo_ccustomerid = #{custId}
            and tmo_dstartdate <![CDATA[<=]]> #{baseDate}
            and tmo_denddate <![CDATA[>=]]> #{baseDate}) d
            where d.premonth is not null
    </select>

    <!-- 起算日を取得します -->
    <select id="selectDetailPeriod" parameterType="java.util.HashMap" resultType="java.lang.String">
        select to_char(tmg_4calc_get_startdate_4weeks( #{custId},#{compCode},TRUNC(SYSDATE),#{employeeId})) as detailPeriod from dual
    </select>

    <!-- 表示基準日が4週間単位の変形労働に則っているか -->
    <select id="selectIsStart4weeks" parameterType="java.util.HashMap" resultType="java.lang.String">
        select 1 from dual where mod(to_date(#{targetDate},'yyyy/MM/dd')-to_date(#{detailPeriod},'yyyy/MM/dd'),7*4)=0
    </select>

    <!-- [区分]汎用マスタより区分コンボボックスの選択値を取得します -->
    <select id="selectGenericDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select mgd_cmastercode,mgd_cgenericdetaildesc
        from mast_generic_detail
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_clanguage_ck = #{language}
        and mgd_cgenericgroupid = 'TMG_WORK'
        and mgd_nsparenum1 = 9
        and mgd_dstart_ck <![CDATA[<=]]> #{baseDate}
        and mgd_dend <![CDATA[>=]]> #{baseDate}
        order by mgd_cmastercode
    </select>

    <!--[出張]汎用マスタより出張区分コンボボックスの選択値を取得します -->
    <select id="selectBusinessTrip" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select mgd_cmastercode,mgd_cgenericdetaildesc
        from mast_generic_detail
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_clanguage_ck = #{language}
        and mgd_cgenericgroupid = 'TMG_BUSINESS_TRIP'
        and mgd_dstart_ck <![CDATA[<=]]> #{baseDate}
        and mgd_dend <![CDATA[>=]]> #{baseDate}
        order by mgd_cmastercode
    </select>

    <!-- 勤務パターンテーブルより勤務パターンコンボボックスの選択値を取得します.(一括指定用) -->
    <select id="selectWorkPatternIkkatu" parameterType="java.util.HashMap" resultType="java.util.HashMap">
         select 'TMG_PATTERN|' as cpatternid
            ,'(変更しない)' as cpatternname
            ,null as json
          from dual
        union
        select 'TMG_PATTERN|' || cpatternid as cpatternid
            ,cpatternname
            ,tmg_f_timerange_table_json(timerange) as json
          from table(tmg_f_get_tmg_pattern_list(#{custId}, #{compCode}, #{sectionid},#{groupid}, #{baseDate}))
    </select>

    <!-- エラーチェックを削除する -->
    <delete id="deleteDailyCheck" parameterType="java.util.HashMap">
        delete from tmg_daily_check
        where tda_ccustomerid = #{custId}
        and tda_cmodifieruserid = #{employeeId}
        and tda_ccompanyid = #{compCode}
        <if test="sTargetDate != null">
            and tda_dyyyymmdd = #{sTargetDate}
        </if>

    </delete>

    <!-- エラーチェックを削除する -->
    <delete id="deleteDailyDetailCheck" parameterType="java.util.HashMap">
        delete from tmg_daily_detail_check
        where tdad_ccustomerid = #{custId}
        and tdad_ccompanyid = #{compCode}
        and tdad_cmodifieruserid = #{employeeId}
        <if test="sTargetDate != null">
            and tdad_dyyyymmdd = #{sTargetDate}
        </if>
    </delete>

    <!-- [勤怠]日別情報を更新する -->
    <insert id="insertTmgDailyCheck" parameterType="java.util.HashMap">
        insert into tmg_daily_check
        (tda_ccustomerid, tda_ccompanyid, tda_cemployeeid, tda_dstartdate,tda_denddate, tda_cmodifieruserid, tda_dmodifieddate,
        tda_cmodifierprogramid, tda_nyyyy, tda_dyyyymm, tda_dyyyymmdd,tda_cstatusflg, tda_cholflg, tda_cworkingid_p,
        tda_nopen_p,tda_nclose_p, tda_nrestopen_p, tda_nrestclose_p,tda_cmodifieruserid_p, tda_dmodifieddate_p, tda_nopen_n,
        tda_nclose_n,tda_nrestopen_n, tda_nrestclose_n,tda_cmodifieruserid_n, tda_dmodifieddate_n, tda_cworkingid_r,tda_cbusinesstripid_r,
        tda_nopen_r, tda_nclose_r, tda_nrestopen_r,tda_nrestclose_r, tda_cmodifieruserid_r, tda_dmodifieddate_r,tda_cbusinesstripid_p,
        tda_ccomment_p, tda_cpatternid)
        select tda_ccustomerid
        ,tda_ccompanyid
        ,tda_cemployeeid
        ,tda_dstartdate
        ,tda_denddate
        ,#{sLoginUserCode}
        ,sysdate
        ,#{tmg_schedule_cmodifierprogramid}
        ,tda_nyyyy
        ,tda_dyyyymm
        ,tda_dyyyymmdd
        <if test="isClearResult == true">
            ,least(tda_cstatusflg, 'TMG_DATASTATUS|1')
        </if>
        <if test="isClearResult == false">
            ,least(tda_cstatusflg, 'TMG_DATASTATUS|3')
        </if>
        ,concat(concat(#{cs_mgd_holflg},'|'), tmg_f_get_mgd_n(#{tda_cworkingid_p}, tda_dyyyymmdd, 2,tda_ccustomerid, tda_ccompanyid, #{language}))
        ,#{tda_cworkingid_p}
        ,tmg_f_conv_hhmi2min(#{tda_nopen_p})
        ,tmg_f_conv_hhmi2min(#{tda_nclose_p})
        ,null
        ,null
        ,#{sLoginUserCode}
        ,sysdate
        <if test="bNoWorking == true">
            ,null
            ,null
        </if>
        <if test="bNoWorking == false">
            ,tmg_f_conv_hhmi2min(#{tda_nopen_p})
            ,tmg_f_conv_hhmi2min(#{tda_nclose_p})
        </if>
        ,null
        ,null
        ,#{sLoginUserCode}
        ,sysdate
        <if test="isClearResult == true">
            ,#{tda_cworkingid_p}
            ,#{tda_cbusinesstripid_p}
            <if test="bNoWorking == true">
                <!-- 就業区分が就業禁止(有給)、就業禁止(無給)の場合はTDA_NOPEN_R、TDA_NCLOSE_Rへの始業、終業時間の反映を行わない -->
                ,null
                ,null
            </if>
            <if test="bNoWorking == false">
                ,tmg_f_conv_hhmi2min(#{tda_nopen_p})
                ,tmg_f_conv_hhmi2min(#{tda_nclose_p})
            </if>
        </if>
        <if test="isClearResult == false">
            <!-- 実績クリア不可の場合、システム日付と更新対象の日付を比較して、システム日付以前であれば実績始業・実績終業の値を据え置き -->
            ,decode(sign(tda_dyyyymmdd - sysdate), 1, #{tda_cworkingid_p},TDA_CWORKINGID_R)
            ,decode(sign(tda_dyyyymmdd - sysdate), 1, #{tda_cbusinesstripid_p},TDA_CBUSINESSTRIPID_R)
            <if test="bNoWorking == true">
                ,null
                ,null
            </if>
            <if test="bNoWorking == false">
                ,decode(sign(tda_dyyyymmdd - sysdate), 1,tmg_f_conv_hhmi2min(#{tda_nopen_p}),tda_nopen_r)
                ,decode(sign(tda_dyyyymmdd - sysdate), 1,tmg_f_conv_hhmi2min(#{tda_nclose_p}),tda_nclose_r)
            </if>
        </if>
        ,null
        ,null
        ,#{sLoginUserCode}
        ,sysdate
        ,#{tda_cbusinesstripid_p}
        ,#{tda_ccomment_p}
        ,tda_cpatternid
        from tmg_daily
        where tda_cemployeeid = #{employeeid}
        and tda_dyyyymmdd = trunc(to_date(#{dyyyymmdd}), 'dd')
        and tda_ccompanyid = #{compCode}
        and tda_ccustomerid = #{custId}
        and tda_dyyyymm = trunc(to_date(#{dyyyymmdd}), 'mm')
        and tda_dstartdate <![CDATA[<=]]> trunc(to_date(#{dyyyymmdd}), 'mm')
        and tda_denddate <![CDATA[>=]]> trunc(to_date(#{dyyyymmdd}), 'mm')
        and tda_nlock_p = 0

    </insert>

    <!-- 日次詳細情報登録（休憩時間：予定） -->
    <insert id="insertTmgDailyDetailCheckRest" parameterType="java.util.HashMap">
        insert into tmg_daily_detail_check
        (tdad_ccustomerid
        , tdad_ccompanyid
        , tdad_cemployeeid
        , tdad_dstartdate
        , tdad_denddate
        , tdad_cmodifieruserid
        , tdad_dmodifieddate
        , tdad_cmodifierprogramid
        , tdad_nyyyy
        , tdad_dyyyymm
        , tdad_dyyyymmdd
        , tdad_cnotworkid
        , tdad_nopen
        , tdad_nclose
        , tdad_seq)
        select #{custId}
        , #{compCode}
        ,#{employeeId}
        ,to_date('1900/01/01', 'yyyy/mm/dd')  <!--データ開始日-->
        ,to_date('2222/12/31', 'yyyy/mm/dd')  <!--データ終了日-->
        ,#{sLoginUserCode}
        ,sysdate
        ,#{tmg_schedule_cmodifierprogramid}
        ,to_char(to_date(#{sTargetDate}), 'yyyy')
        ,trunc(to_date(#{sTargetDate}), 'mm')
        ,to_date(#{sTargetDate})
        ,#{sNotWorkId}
        ,tmg_f_conv_hhmi2min(#{nRestOpen})
        ,tmg_f_conv_hhmi2min(#{nRestClose})
        ,(select nvl(max(tdad_seq), 0) + 1
        from tmg_daily_detail
        where tdad_ccustomerid = #{custId}
        and tdad_ccompanyid = #{compCode}
        and tdad_cemployeeid = #{employeeId}
        and tdad_dyyyymmdd = to_date(#{sTargetDate})
        and (tdad_cnotworkid = #{notworkingid_plan_rest}
        or tdad_cnotworkid = #{notworkingid_notice_rest}
        or tdad_cnotworkid = #{notworkingid_result_rest}))
        from dual
        <!-- 実績クリア不可の場合、システム日付以前なら実績登録を行わない -->
        <if test="isClearResult == false and isNotWorkId == true">
            where to_date(#{sTargetDate})>sysdate
        </if>
    </insert>

    <!-- 勤怠トリガーテーブルに更新対象のデータを挿入する -->
    <insert id="insertTmgTrigger" parameterType="java.util.HashMap">
        insert into tmg_trigger
        (ttr_ccustomerid , ttr_ccompanyid , ttr_cemployeeid ,
        ttr_dstartdate , ttr_denddate , ttr_cmodifieruserid ,
        ttr_dmodifieddate , ttr_cmodifierprogramid , ttr_cprogramid ,
        ttr_dparameter1 , ttr_cparameter1)
        values
        (#{custId} , #{compCode} , #{employeeId},
        to_date(#{minDate}, 'yyyy/mm/dd'),  <!--データ開始日-->
        to_date(#{maxDate}, 'yyyy/mm/dd'),  <!--データ終了日-->
        #{sLoginUserCode} , sysdate ,
        #{tmg_schedule_cmodifierprogramid} ,
        #{tmg_schedule_cmodifierprogramid} , trunc(to_date(#{sTargetDate}), 'dd'), #{act_editmonthly_uschedule})
    </insert>


    <!-- トリガーに追加する -->
    <insert id="insertTrigger" parameterType="java.util.HashMap">
        insert into tmg_trigger
        (ttr_ccustomerid , ttr_ccompanyid , ttr_cemployeeid ,
        ttr_dstartdate , ttr_denddate , ttr_cmodifieruserid ,
        ttr_dmodifieddate , ttr_cmodifierprogramid , ttr_cprogramid ,
        ttr_cparameter1,ttr_dparameter1)
        values
        (#{custId} , #{compCode} , #{employeeId},
        to_date('1900/01/01', 'yyyy/mm/dd'),  <!--データ開始日-->
        to_date('2222/12/31', 'yyyy/mm/dd'),  <!--データ終了日-->
        #{sLoginUserCode} , sysdate ,
        #{modifierprogramid} ,
        #{sAction},
        #{sAction},
        add_months(trunc(sysdate, 'MM'), 1))
    </insert>


    <!-- 勤怠トリガーテーブルから該当データを削除する -->
    <delete id="deleteTmgTrigger" parameterType="java.util.HashMap">
        delete from tmg_trigger
             where ttr_cmodifierprogramid =#{tmg_schedule_cmodifierprogramid}
               and ttr_cmodifieruserid = #{employeeId}
               and ttr_ccustomerid = #{custId}
               and ttr_ccompanyid = #{compCode}
    </delete>

    <!-- エラーメッセージを削除する -->
    <delete id="deleteErrMsg" parameterType="java.util.HashMap">
        delete from tmg_errmsg
             where ter_cmodifierprogramid =#{tmg_schedule_cmodifierprogramid}
               and ter_cmodifieruserid = #{employeeId}
               and ter_ccustomerid = #{custId}
               and ter_ccompanyid = #{compCode}
    </delete>

    <!-- 週勤務パターンチェックを削除する -->
    <delete id="deleteWeekPatternCheck" parameterType="java.util.HashMap">
        delete from tmg_week_pattern_check
             where twp_ccustomerid = #{custId}
               and twp_ccompanyid = #{compCode}
               and twp_cmodifieruserid = #{employeeId}
               and twp_cmodifierprogramid =#{tmg_schedule_cmodifierprogramid}
    </delete>


    <!-- エラーチェックを削除する -->
    <delete id="deleteDetailCheck" parameterType="java.util.HashMap">
        delete from tmg_daily_detail_check
        where tdad_ccustomerid = #{custId}
        and tdad_ccompanyid = #{compCode}
        and tdad_cmodifieruserid = #{sLoginUserCode}
        <if test="sTargetDate != null">
            and tdad_dyyyymmdd = #{sTargetDate}
        </if>
    </delete>

    <!-- 週勤務パターンを取得する -->
    <select id="selectCsvReference" parameterType="java.util.HashMap" resultMap="selectCsvReferenceMap">
        select
        twp_cemployeeid,
        twp_nid,
        to_char(twp_dstartdate, 'yyyy/mm/dd')as twp_dstartdate
        ,to_char(twp_denddate, 'yyyy/mm/dd') as twp_denddate
        ,to_char(twp_dstartdate, 'yyyy/mm/dd') || ' - ' || to_char(twp_denddate , 'yyyy/mm/dd') as period
        ,nvl(twp_copen1, ' ') as twp_copen1
        ,nvl(twp_cclose1, ' ') as twp_cclose1
        ,nvl(twp_crestopen1 || decode(twp_crestopen1, null , '', ' - ') ||twp_crestclose1, ' ') as rest1
        ,decode(twp_cholflg1, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen1, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname1
        ,nvl(twp_copen2, ' ') as twp_copen2
        ,nvl(twp_cclose2, ' ') as twp_cclose2
        ,nvl(twp_crestopen2 || decode(twp_crestopen2, null , '', ' - ') || twp_crestclose2, ' ') as rest2
        ,decode(twp_cholflg2, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen2, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname2
        ,nvl(twp_copen3, ' ') as twp_copen3
        ,nvl(twp_cclose3, ' ') as twp_cclose3
        ,nvl(twp_crestopen3 || decode(twp_crestopen3, null , '', ' - ') ||twp_crestclose3, ' ') as rest3
        ,decode(twp_cholflg3, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen3, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname3
        ,nvl(twp_copen4, ' ') as twp_copen4
        ,nvl(twp_cclose4, ' ') as twp_cclose4
        ,nvl(twp_crestopen4 || decode(twp_crestopen4, null , '', ' - ') || twp_crestclose4, ' ') as rest4
        ,decode(twp_cholflg4, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen4, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname4
        ,nvl(twp_copen5, ' ') as twp_copen5
        ,nvl(twp_cclose5, ' ') as twp_cclose5
        ,nvl(twp_crestopen5 || decode(twp_crestopen5, null , '', ' - ') || twp_crestclose5, ' ') as rest5
        ,decode(twp_cholflg5, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen5, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname5
        ,nvl(twp_copen6, ' ') as twp_copen6
        ,nvl(twp_cclose6, ' ') as twp_cclose6
        ,nvl(twp_crestopen6 || decode(twp_crestopen6, null , '', ' - ') || twp_crestclose6, ' ') as rest6
        ,decode(twp_cholflg6, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen6, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname6
        ,nvl(twp_copen7, ' ') as twp_copen7
        ,nvl(twp_cclose7, ' ') as twp_cclose7
        ,nvl(twp_crestopen7 || decode(twp_crestopen7, null , '', ' - ') || twp_crestclose7, ' ') as rest7
        ,decode(twp_cholflg7, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen7, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname7
        from tmg_week_pattern
        where twp_nid = #{twp_nid}
        and twp_ccustomerid = #{custId}
        and twp_ccompanyid = #{compCode}
        and twp_cemployeeid = #{employeeId};
    </select>


    <!-- 週勤務パターンリストを取得する -->
    <select id="selectCsvReferenceList" parameterType="java.util.HashMap" resultMap="selectCsvReferenceMap">
        select
        twp_cemployeeid,
        twp_nid,
        to_char(twp_dstartdate, 'yyyy/mm/dd')as twp_dstartdate
        ,to_char(twp_denddate, 'yyyy/mm/dd') as twp_denddate
        ,to_char(twp_dstartdate, 'yyyy/mm/dd') || ' - ' || to_char(twp_denddate , 'yyyy/mm/dd') as period
        ,nvl(twp_copen1, ' ') as twp_copen1
        ,nvl(twp_cclose1, ' ') as twp_cclose1
        ,nvl(twp_crestopen1 || decode(twp_crestopen1, null , '', ' - ') ||twp_crestclose1, ' ') as rest1
        ,decode(twp_cholflg1, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen1, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname1
        ,nvl(twp_copen2, ' ') as twp_copen2
        ,nvl(twp_cclose2, ' ') as twp_cclose2
        ,nvl(twp_crestopen2 || decode(twp_crestopen2, null , '', ' - ') || twp_crestclose2, ' ') as rest2
        ,decode(twp_cholflg2, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck<![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen2, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname2
        ,nvl(twp_copen3, ' ') as twp_copen3
        ,nvl(twp_cclose3, ' ') as twp_cclose3
        ,nvl(twp_crestopen3 || decode(twp_crestopen3, null , '', ' - ') ||twp_crestclose3, ' ') as rest3
        ,decode(twp_cholflg3, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen3, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname3
        ,nvl(twp_copen4, ' ') as twp_copen4
        ,nvl(twp_cclose4, ' ') as twp_cclose4
        ,nvl(twp_crestopen4 || decode(twp_crestopen4, null , '', ' - ') || twp_crestclose4, ' ') as rest4
        ,decode(twp_cholflg4, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen4, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname4
        ,nvl(twp_copen5, ' ') as twp_copen5
        ,nvl(twp_cclose5, ' ') as twp_cclose5
        ,nvl(twp_crestopen5 || decode(twp_crestopen5, null , '', ' - ') || twp_crestclose5, ' ') as rest5
        ,decode(twp_cholflg5, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen5, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname5
        ,nvl(twp_copen6, ' ') as twp_copen6
        ,nvl(twp_cclose6, ' ') as twp_cclose6
        ,nvl(twp_crestopen6 || decode(twp_crestopen6, null , '', ' - ') || twp_crestclose6, ' ') as rest6
        ,decode(twp_cholflg6, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen6, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname6
        ,nvl(twp_copen7, ' ') as twp_copen7
        ,nvl(twp_cclose7, ' ') as twp_cclose7
        ,nvl(twp_crestopen7 || decode(twp_crestopen7, null , '', ' - ') || twp_crestclose7, ' ') as rest7
        ,decode(twp_cholflg7, 1, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 2), 3, (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 2
        and mgd_disporder = 3), decode(twp_copen7, null, (select
        mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 3), (select mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        and mgd_work_type = 1))) as workname7
        from tmg_week_pattern
        where twp_ccustomerid = #{custId}
        and twp_ccompanyid = #{compCode}
        and twp_cemployeeid = #{employeeId}
        <if test="twp_nid != null and twp_nid != 0">
            and twp_nid != #{twp_nid}
        </if>
        and twp_denddate <![CDATA[>]]> trunc(add_months(sysdate,1))
    </select>


    <!-- [勤怠]週次勤務パターン（エラーチェック用）登録 -->
    <insert id="insertTmgWeekPatternCheck" parameterMap="insertTmgWeekPatternCheckMap">
        insert into tmg_week_pattern_check
            (twp_nid , twp_ccustomerid , twp_ccompanyid , twp_cemployeeid ,
            twp_dstartdate , twp_denddate , twp_cmodifieruserid ,twp_dmodifieddate ,
            twp_cmodifierprogramid , twp_copen1 ,twp_cclose1 , twp_crestopen1 ,
            twp_crestclose1 , twp_cholflg1 ,twp_copen2 , twp_cclose2 ,
            twp_crestopen2 , twp_crestclose2 ,twp_cholflg2 , twp_copen3 ,
            twp_cclose3 , twp_crestopen3 ,twp_crestclose3 , twp_cholflg3 ,
            twp_copen4 , twp_cclose4 ,twp_crestopen4 , twp_crestclose4 ,
            twp_cholflg4 , twp_copen5 ,twp_cclose5 , twp_crestopen5 ,
            twp_crestclose5 , twp_cholflg5 ,twp_copen6 , twp_cclose6 ,
            twp_crestopen6 , twp_crestclose6 ,twp_cholflg6 , twp_copen7 ,
            twp_cclose7 , twp_crestopen7 ,twp_crestclose7 , twp_cholflg7)
        values
            (tmg_week_pattern_seq.nextval , #{custId} , #{compCode} , #{employeeId} ,
            trunc(to_date(#{twp_dstartdate})), trunc(to_date(#{twp_denddate})),#{twp_cmodifieruserid} , sysdate ,
            #{twp_cmodifierprogramid} ,#{twp_copen1} , #{twp_cclose1} , #{twp_crestopen1} ,
            #{twp_crestclose1} , #{twp_cholflg1} , #{twp_copen2} , #{twp_cclose2}  ,
            #{twp_crestopen2}  ,#{twp_crestclose2} , #{twp_cholflg2}, #{twp_copen3},
            #{twp_cclose3} , #{twp_crestopen3} , #{twp_crestclose3}  , #{twp_cholflg3},
             #{twp_copen4},  #{twp_cclose4} ,  #{twp_crestopen4}  ,  #{twp_crestclose4} ,
             #{twp_cholflg4} ,  #{twp_copen5}  , #{twp_cclose5}  , #{twp_crestopen5},
            #{twp_crestclose5} ,  #{twp_cholflg5}, #{twp_copen6}, #{twp_cclose6} ,
             #{twp_crestopen6},  #{twp_crestclose6},  #{twp_cholflg6} , #{twp_copen7},
             #{twp_cclose7}, #{twp_crestopen7} , #{twp_crestclose7} , #{twp_cholflg7} )
    </insert>

    <!-- エラーメッセージに追加する -->
    <insert id="insertErrMsg" parameterType="java.util.HashMap">
        insert into tmg_errmsg
            (ter_ccustomerid, ter_ccompanyid, ter_dstartdate, ter_denddate,
            ter_cmodifieruserid, ter_dmodifieddate, ter_cmodifierprogramid,
            ter_cerrcode, ter_clanguage)
        select #{custId}
            ,#{compCode}
            ,to_date(#{minDate}, 'yyyy/mm/dd')
            ,to_date(#{maxDate}, 'yyyy/mm/dd')
            ,#{modifieruserid}
            ,sysdate
            ,#{modifierprogramid}
            ,tmg_f_check_week_pattern(#{employeeId}, add_months(trunc(sysdate,'mm'), 1), #{custId}, #{compCode})
            ,#{language}
            from dual
    </insert>

    <!--エラーメッセージを取得する-->
    <select id="selectErrMsg" parameterType="java.util.HashMap" resultType="java.lang.String">
        select ter_cerrcode
              from tmg_errmsg
             where ter_ccustomerid =  #{custId}
               and ter_ccompanyid = #{compCode}
               and ter_cmodifieruserid = #{modifieruserid}
               and ter_cmodifierprogramid =#{modifierprogramid}

    </select>

    <!-- 検索対象年月日の開始日 -->
    <select id="selectBaseDateFor4Week" parameterType="java.util.HashMap" resultType="java.lang.String">
        select decode(sign(max(tda_dyyyymmdd) - to_date(#{startDate})), - 1,
                    to_char(max(tda_dyyyymmdd) - #{param4WeekAfter}, 'yyyy/mm/dd'), decode(sign(
                            max(tda_dyyyymmdd) - to_date(#{endDate})), - 1,
                        to_char(max(tda_dyyyymmdd) - #{param4WeekAfter}, 'yyyy/mm/dd'), decode(
                            sign(min(tda_dyyyymmdd) - to_date(#{startDate})), 1,
                            to_char(min(tda_dyyyymmdd), 'yyyy/mm/dd'), decode(sign(
                                    min(tda_dyyyymmdd) - to_date(#{endDate})), 1,
                                to_char(min(tda_dyyyymmdd), 'yyyy/mm/dd')))))  as baseDate
              from tmg_daily
             where tda_cemployeeid = #{employeeId}
               and tda_ccompanyid = #{compCode}
               and tda_ccustomerid = #{custId}
    </select>

    <!-- 対象社員の勤怠日別情報の最小日と最大日を取得する -->
    <select id="selectTmgDailyMinAndMax" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select to_char(min(tda_dyyyymmdd), 'yyyy/mm/dd') as min_date
                ,to_char(max(tda_dyyyymmdd), 'yyyy/mm/dd') as max_date
              from tmg_daily
             where tda_cemployeeid =  #{employeeId}
               and tda_ccompanyid = #{compCode}
               and tda_ccustomerid =  #{custId}

    </select>

    <!-- TmgMonthlyの更新日取得(予定確認画面) -->
    <select id="selectMonthlyModifiedDate" parameterType="java.util.HashMap" resultType="java.lang.String">
        select to_char(tmo_dmodifieddate,'yyyy/mm/dd') as tmo_dmodifieddate
              from tmg_monthly m
             where m.tmo_ccustomerid = #{custId}
               and m.tmo_ccompanyid = #{compCode}
               and m.tmo_cemployeeid = #{employeeId}
               and m.tmo_dyyyymm = trunc(to_date(#{baseDate}, 'yyyy/mm/dd'), 'mm')
    </select>

    <!-- 確認ボタンのフラグレコード更新処理 -->
    <update id="updateSchedulePermStatus" parameterType="java.util.HashMap">
        update tmg_employee_attribute a
        set tes_cattribute = #{onff},
        tes_cmodifieruserid = #{employeeId},
        tes_dmodifieddate = sysdate ,
        tes_cmodifierprogramid = #{modifierprogramid}
        where a.tes_ccustomerid = #{custId}
        and a.tes_ccompanyid = #{compCode}
        and a.tes_cemployeeid = #{employeeId}
        and a.tes_dstartdate <![CDATA[<=]]> trunc(to_date(#{baseDate}, 'yyyy/mm/dd'),'mm')
        and a.tes_denddate <![CDATA[>=]]> trunc(to_date(#{baseDate}, 'yyyy/mm/dd'),'mm')
        and a.tes_ctype = #{type}
    </update>

    <!-- 週勤務パターン画面に勤務区分リスト -->
    <select id="selectWeekPtn" parameterType="java.util.HashMap" resultMap="selectWeekPtnMap">
        select mgd_work,mgd_workname
        from tmg_v_mgd_work4weekptn
        where mgd_ccustomerid = #{custId}
        and mgd_ccompanyid_ck_fk = #{compCode}
        and mgd_dstart_ck <![CDATA[<=]]> sysdate
        and mgd_dend <![CDATA[>=]]> sysdate
        and mgd_clanguage_ck = #{language}
        order by mgd_disporder
    </select>

    <!-- 週勤務パターンを削除する -->
    <delete id="deleteWeekPtn" parameterType="java.util.HashMap">
        delete from tmg_week_pattern p  where p.twp_ccustomerid =#{custId} and p.twp_ccompanyid = #{compCode} and p.twp_nid = #{twp_nid}
    </delete>

    <!--  [勤怠]週次勤務パターン（エラーチェック用）抽出登録 -->
    <insert id="buildSQLForSelectInsertTmgWeekPatternCheck" parameterType="java.util.HashMap">
        insert into tmg_week_pattern_check
        (twp_nid , twp_ccustomerid , twp_ccompanyid , twp_cemployeeid ,
        twp_dstartdate , twp_denddate , twp_cmodifieruserid ,
        twp_dmodifieddate , twp_cmodifierprogramid , twp_copen1 ,
        twp_cclose1 , twp_crestopen1 , twp_crestclose1 , twp_cholflg1 ,
        twp_copen2 , twp_cclose2 , twp_crestopen2 , twp_crestclose2 ,
        twp_cholflg2 , twp_copen3 , twp_cclose3 , twp_crestopen3 ,
        twp_crestclose3 , twp_cholflg3 , twp_copen4 , twp_cclose4 ,
        twp_crestopen4 , twp_crestclose4 , twp_cholflg4 , twp_copen5 ,
        twp_cclose5 , twp_crestopen5 , twp_crestclose5 , twp_cholflg5 ,
        twp_copen6 , twp_cclose6 , twp_crestopen6 , twp_crestclose6 ,
        twp_cholflg6 , twp_copen7 , twp_cclose7 , twp_crestopen7 ,
        twp_crestclose7 , twp_cholflg7)
        select tmg_week_pattern_seq.nextval
        ,twp_ccustomerid
        ,twp_ccompanyid
        ,twp_cemployeeid
        ,twp_dstartdate
        ,twp_denddate
        ,twp_cmodifieruserid
        ,sysdate
        ,twp_cmodifierprogramid
        ,twp_copen1
        ,twp_cclose1
        ,twp_crestopen1
        ,twp_crestclose1
        ,twp_cholflg1
        ,twp_copen2
        ,twp_cclose2
        ,twp_crestopen2
        ,twp_crestclose2
        ,twp_cholflg2
        ,twp_copen3
        ,twp_cclose3
        ,twp_crestopen3
        ,twp_crestclose3
        ,twp_cholflg3
        ,twp_copen4
        ,twp_cclose4
        ,twp_crestopen4
        ,twp_crestclose4
        ,twp_cholflg4
        ,twp_copen5
        ,twp_cclose5
        ,twp_crestopen5
        ,twp_crestclose5
        ,twp_cholflg5
        ,twp_copen6
        ,twp_cclose6
        ,twp_crestopen6
        ,twp_crestclose6
        ,twp_cholflg6
        ,twp_copen7
        ,twp_cclose7
        ,twp_crestopen7
        ,twp_crestclose7
        ,twp_cholflg7
        from tmg_week_pattern
        where twp_ccustomerid = #{custId}
        and twp_ccompanyid = #{compCode}
        and twp_cemployeeid = #{employeeId}
        <if test="twp_nid != null">
            and twp_nid != #{twp_nid}
        </if>
        <if test="twp_nid == null">
            and twp_denddate <![CDATA[>]]> trunc(add_months(sysdate,1))
        </if>
        <!--
                <if test="twp_nid != null">
                    union
                    select tmg_week_pattern_seq.nextval
                    ,twp_ccustomerid
                    ,twp_ccompanyid
                    ,twp_cemployeeid
                    ,#{twp_dstartdate} as twp_dstartdate
                    ,#{twp_denddate} as twp_denddate
                    ,#{modifieruserid}
                    ,sysdate
                    ,#{modifierprogramid}
                    ,twp_copen1
                    ,twp_cclose1
                    ,twp_crestopen1
                    ,twp_crestclose1
                    ,twp_cholflg1
                    ,twp_copen2
                    ,twp_cclose2
                    ,twp_crestopen2
                    ,twp_crestclose2
                    ,twp_cholflg2
                    ,twp_copen3
                    ,twp_cclose3
                    ,twp_crestopen3
                    ,twp_crestclose3
                    ,twp_cholflg3
                    ,twp_copen4
                    ,twp_cclose4
                    ,twp_crestopen4
                    ,twp_crestclose4
                    ,twp_cholflg4
                    ,twp_copen5
                    ,twp_cclose5
                    ,twp_crestopen5
                    ,twp_crestclose5
                    ,twp_cholflg5
                    ,twp_copen6
                    ,twp_cclose6
                    ,twp_crestopen6
                    ,twp_crestclose6
                    ,twp_cholflg6
                    ,twp_copen7
                    ,twp_cclose7
                    ,twp_crestopen7
                    ,twp_crestclose7
                    ,twp_cholflg7
                    from tmg_week_pattern
                    where twp_ccustomerid = #{custId}
                    and twp_ccompanyid = #{compCode}
                    and twp_cemployeeid = #{employeeId}
                    and twp_nid = #{twp_nid}
                </if>-->
    </insert>
    <!-- 勤務パターンを更新する -->
    <update id="updateWeekPattern" parameterType="java.util.HashMap">
        update tmg_week_pattern p
           set p.twp_dstartdate = #{twp_dstartdate},
            p.twp_denddate = #{twp_denddate},
            p.twp_cmodifieruserid = #{modifieruserid}
         where p.twp_nid = #{twp_nid}
    </update>

    <select id="buildSQLForSelectTmgStatus" resultMap="selectTmgStatusMap" parameterType="java.util.HashMap">
        select #{group}(tmg_f_is_fixed_monthly(m.tmo_cemployeeid, m.tmo_dyyyymm, m.tmo_ccustomerid, m.tmo_ccompanyid)) as fixed_monthly
        ,#{group}(tmg_f_is_fixed_salary (m.tmo_cemployeeid, m.tmo_dyyyymm, m.tmo_ccustomerid, m.tmo_ccompanyid)) as fixed_salary
        from tmg_monthly m
        where m.tmo_cemployeeid = #{employeeId}
        and m.tmo_dyyyymm <![CDATA[>=]]>  TRUNC(#{dstart}, 'MM')
        and m.tmo_dyyyymm <![CDATA[<=]]>  TRUNC(#{dend}, 'MM')
        and m.tmo_ccompanyid = #{compCode}
        and m.tmo_ccustomerid = #{custId}
    </select>

    <select id="buildSQLForSelectTmgStatus2" resultMap="selectTmgStatusMap" parameterType="java.util.HashMap">
        select tmg_f_is_fixed_monthly(m.tmo_cemployeeid, m.tmo_dyyyymm, m.tmo_ccustomerid,m.tmo_ccompanyid) as fixed_monthly
        ,tmg_f_is_fixed_salary (m.tmo_cemployeeid, m.tmo_dyyyymm, m.tmo_ccustomerid,m.tmo_ccompanyid) as fixed_salary
        ,d.tda_cstatusflg
        ,m.tmo_cstatusflg
        ,(case when trunc(sysdate) <![CDATA[<]]> d.tda_dyyyymmdd then 1 else 0 end) as is_future
        from tmg_daily d,
        tmg_monthly m
        where d.tda_cemployeeid = #{employeeId}
        and d.tda_dyyyymmdd = to_date(#{dyyyymmdd}, 'yyyy/mm/dd')
        and d.tda_ccustomerid = #{custId}
        and d.tda_ccompanyid = #{compCode}
        and m.tmo_cemployeeid = d.tda_cemployeeid
        and m.tmo_dyyyymm = d.tda_dyyyymm
        and m.tmo_ccustomerid = d.tda_ccustomerid
        and m.tmo_ccompanyid = d.tda_ccompanyid
    </select>

    <select id="buildSQLForSelectUseScheculeUser" parameterType="java.util.HashMap" resultType="java.lang.String">
        select TMG_F_IS_SCHEDULABLE_EMP( #{custId},#{compCode},#{employeeId},#{language}) from dual
    </select>

    <!-- 勤務予定時間リスト -->
    <select id="selectScheduleDateList" parameterType="java.util.HashMap" resultType="java.lang.String">
        select tda_dyyyymm
              from (select distinct (to_char(d.tda_dyyyymm, #{formatter})) as
                    tda_dyyyymm
                  from tmg_daily d
                 where d.tda_ccompanyid = #{compCode}
                   and d.tda_ccustomerid = #{custId}
                   and d.tda_cemployeeid = #{employeeId})
             order by tda_dyyyymm
    </select>


</mapper>